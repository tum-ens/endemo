Search.setIndex({"docnames": ["endemo2", "endemo2.data_structures", "endemo2.input_and_settings", "endemo2.model_instance", "endemo2.model_instance.instance_filter", "endemo2.model_instance.model", "endemo2.model_instance.model.cts", "endemo2.model_instance.model.households", "endemo2.model_instance.model.industry", "endemo2.model_instance.model.transport", "endemo2.output", "endemo2.preprocessing", "index", "modules"], "filenames": ["endemo2.rst", "endemo2.data_structures.rst", "endemo2.input_and_settings.rst", "endemo2.model_instance.rst", "endemo2.model_instance.instance_filter.rst", "endemo2.model_instance.model.rst", "endemo2.model_instance.model.cts.rst", "endemo2.model_instance.model.households.rst", "endemo2.model_instance.model.industry.rst", "endemo2.model_instance.model.transport.rst", "endemo2.output.rst", "endemo2.preprocessing.rst", "index.rst", "modules.rst"], "titles": ["endemo2 package", "endemo2.data_structures package", "endemo2.input_and_settings package", "endemo2.model_instance package", "endemo2.model_instance.instance_filter package", "endemo2.model_instance.model package", "endemo2.model_instance.model.cts package", "endemo2.model_instance.model.households package", "endemo2.model_instance.model.industry package", "endemo2.model_instance.model.transport package", "endemo2.output package", "endemo2.preprocessing package", "Welcome to Endemo\u2019s documentation!", "endemo2"], "terms": {"thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "i": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12], "us": [0, 1, 2, 4, 10, 11, 12], "energi": [1, 2, 4, 10, 11, 12], "demand": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "model": [0, 1, 2, 3, 4, 10, 12], "when": [1, 2, 8, 10, 12], "packag": [12, 13], "import": 12, "ad": [1, 10, 12], "conda": 12, "environ": 12, "call": [2, 8, 10, 11, 12], "env": 12, "export": 12, "n": 12, "name": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12], "yml": 12, "updat": [0, 2, 12], "file": [2, 10, 11, 12], "git": 12, "repositori": 12, "chang": [1, 2, 12], "function": [0, 1, 2, 8, 10, 12], "alwai": 12, "check": [0, 12], "docstr": 12, "still": 12, "correct": 12, "accordingli": 12, "whenev": 12, "you": 12, "someth": 12, "doc": [2, 12], "string": [0, 1, 2, 12], "pleas": 12, "make": [1, 2, 12], "html": 12, "command": 12, "line": [10, 12], "within": [2, 10, 12], "folder": [0, 2, 10, 12], "structur": [0, 1, 2, 12], "thing": [11, 12], "like": [0, 1, 12], "first": [0, 1, 11, 12], "delet": 12, "all": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "rst": 12, "exclud": 12, "index": [2, 12], "execut": [0, 1, 11, 12], "sphinx": 12, "apidoc": 12, "o": 12, "path": [2, 10, 12], "sourc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "endemo2": 12, "properli": 12, "modul": [12, 13], "search": [0, 1, 12], "page": 12, "data_structur": [0, 2, 10, 11, 12, 13], "contain": [0, 2, 4, 5, 10, 11, 12, 13], "ca": [0, 1, 4, 12], "alpha2": [0, 1, 12], "alpha3": [0, 1, 12], "german_nam": [0, 1, 12], "datapoint": [0, 1, 2, 11, 12], "x": [0, 1, 2, 10, 11, 12], "y": [0, 1, 8, 10, 12], "add": [0, 1, 10, 12], "copy_scal": [0, 1, 12], "get": [0, 1, 2, 4, 10, 11, 12], "get_sum": [0, 1, 12], "scale": [0, 1, 12], "set": [0, 1, 2, 4, 10, 11, 12], "eh": [0, 1, 2, 4, 11, 12], "electr": [0, 1, 2, 4, 8, 11, 12], "heat": [0, 1, 2, 4, 7, 11, 12], "copy_add": [0, 1, 12], "copy_multipli": [0, 1, 12], "copy_multiply_scalar": [0, 1, 12], "mutable_add": [0, 1, 12], "mutable_multiply_scalar": [0, 1, 12], "mutable_sub": [0, 1, 12], "hisprog": [0, 1, 2, 11, 12], "histor": [0, 1, 2, 4, 10, 11, 12], "prognosi": [0, 1, 2, 4, 11, 12], "interv": [0, 1, 2, 10, 12], "end": [0, 1, 10, 12], "start": [0, 1, 2, 4, 10, 12], "specconsum": [0, 1, 2, 4, 11, 12], "cap_at_bat": [0, 1, 12], "conversions_str": [0, 12, 13], "conversions_unit": [0, 12, 13], "unit": [0, 1, 2, 5, 12], "gj": [0, 1, 12], "gwh": [0, 1, 12], "mwh": [0, 1, 12], "tj": [0, 1, 12], "twh": [0, 1, 4, 8, 12], "kwh": [0, 1, 12], "convert": [0, 1, 2, 10, 11, 12], "get_conversion_scalar": [0, 1, 12], "enumer": [0, 2, 12, 13], "demandtyp": [0, 1, 2, 4, 6, 7, 8, 11, 12], "hydrogen": [0, 1, 2, 4, 8, 12], "forecastmethod": [0, 1, 2, 12], "exponenti": [0, 1, 2, 4, 10, 12], "linear": [0, 1, 2, 4, 10, 12], "logarithm": [0, 1, 2, 12], "quadrat": [0, 1, 2, 10, 12], "quadratic_offset": [0, 1, 12], "grouptyp": [0, 1, 2, 11, 12], "empti": [0, 1, 12], "join": [0, 1, 11, 12], "joined_diversifi": [0, 1, 11, 12], "separ": [0, 1, 2, 11, 12], "householdssubsectorid": [0, 1, 2, 4, 7, 11, 12], "cook": [0, 1, 2, 12], "lighting_and_appli": [0, 1, 2, 12], "other": [0, 1, 2, 12], "space_cool": [0, 1, 2, 12], "space_h": [0, 1, 2, 12], "water_h": [0, 1, 2, 12], "scforecastmethod": [0, 1, 2, 12], "const_last": [0, 1, 2, 12], "const_mean": [0, 1, 2, 12], "sectoridentifi": [0, 1, 2, 4, 5, 12], "commercial_trade_servic": [0, 1, 2, 12], "household": [0, 1, 2, 3, 4, 5, 10, 11, 12], "industri": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12], "transport": [0, 1, 2, 3, 4, 5, 10, 11, 12], "startpoint": [0, 1, 12], "average_valu": [0, 1, 12], "last_avail": [0, 1, 12], "manual": [0, 1, 2, 11, 12], "subsectorgroup": [0, 1, 2, 12], "chemicals_and_petrochem": [0, 1, 2, 12], "food_and_tobacco": [0, 1, 2, 12], "iron_and_steel": [0, 1, 2, 12], "non_metalic_miner": [0, 1, 2, 12], "paper": [0, 1, 2, 12], "nuts_tre": [0, 12, 13], "nutsregion": [0, 1, 12], "nutsregionleaf": [0, 1, 12], "nutsregionnod": [0, 1, 11, 12], "add_leaf_region": [0, 1, 12], "get_all_leaf_nod": [0, 1, 12], "get_nodes_df": [0, 1, 12], "get_region_nam": [0, 1, 12], "get_specific_nod": [0, 1, 12], "prediction_model": [0, 10, 11, 12, 13], "coef": [0, 1, 10, 11, 12], "get_exp": [0, 1, 12], "get_exp_i": [0, 1, 12], "get_function_i": [0, 1, 12], "get_lin": [0, 1, 12], "get_lin_i": [0, 1, 12], "get_log": [0, 1, 12], "get_log_i": [0, 1, 12], "get_method": [0, 1, 12], "get_offset": [0, 1, 12], "get_quadr": [0, 1, 12], "get_quadr_offset_i": [0, 1, 12], "get_quadr_i": [0, 1, 12], "set_exp": [0, 1, 12], "set_exp_growth_r": [0, 1, 12], "set_exp_start_point": [0, 1, 12], "set_lin": [0, 1, 12], "set_log": [0, 1, 12], "set_method": [0, 1, 12], "set_offset": [0, 1, 12], "set_quadr": [0, 1, 12], "intervalforecast": [0, 1, 11, 12], "get_forecast": [0, 1, 12], "rigidtimeseri": [0, 1, 11, 12], "get_last_available_data_entry_or_zero": [0, 1, 12], "get_value_at_year": [0, 1, 12], "timeseri": [0, 1, 10, 11, 12], "append_others_data": [0, 1, 12], "divide_bi": [0, 1, 12], "fill_empty_years_with_valu": [0, 1, 12], "fill_own_empty_years_with_valu": [0, 1, 12], "get_last_data_entri": [0, 1, 12], "get_value_at_year_else_zero": [0, 1, 12], "map_two_timeseri": [0, 1, 12], "map_i": [0, 1, 12], "merge_two_timeseri": [0, 1, 12], "twodseri": [0, 1, 10, 11, 12], "generate_coef": [0, 1, 12], "get_coef": [0, 1, 11, 12], "get_data": [0, 1, 12], "get_mean_i": [0, 1, 12], "is_empti": [0, 1, 8, 12], "is_zero": [0, 1, 12, 13], "input_and_set": [0, 1, 12, 13], "control_paramet": [0, 12, 13], "controlparamet": [0, 2, 4, 11, 12], "ctsset": [0, 2, 12], "map_sc_forecast_method": [0, 2, 12], "generalset": [0, 2, 12], "get_active_sector": [0, 2, 3, 4, 12], "get_paramet": [0, 2, 12], "sector_id_map": [0, 2, 12], "householdset": [0, 2, 12], "industryset": [0, 2, 12], "forecast_map": [0, 2, 12], "productset": [0, 2, 12], "activ": [0, 2, 4, 12], "efficiency_improv": [0, 2, 12], "manual_exp_change_r": [0, 2, 12], "perc_us": [0, 2, 12], "input_ct": [0, 12, 13], "ctsinput": [0, 2, 4, 11, 12], "read_employee_per_subsector": [0, 2, 12], "read_number_employees_ct": [0, 2, 12], "subsector_nam": [0, 2, 4, 6, 12], "input_gener": [0, 12, 13], "abbrevi": [0, 2, 4, 12], "dict_alpha2_en_map": [0, 2, 12], "dict_de_en_map": [0, 2, 12], "dict_en_alpha2_map": [0, 2, 12], "generalinput": [0, 2, 4, 11, 12], "sc_historical_sheet_nam": [0, 2, 12], "populationinput": [0, 2, 12], "input_household": [0, 12, 13], "householdsinput": [0, 2, 4, 11, 12], "hh_energy_carrier_unit_convers": [0, 2, 12], "hh_his_sheets_skip_row": [0, 2, 12], "hh_input_sheet_nam": [0, 2, 12], "hw_read_hot_water_input": [0, 2, 12], "read_historical_consumpt": [0, 2, 12], "sh_read_space_heating_input": [0, 2, 12], "input_industri": [0, 12, 13], "industryinput": [0, 2, 4, 12], "product_data_access": [0, 2, 12], "read_heat_level": [0, 2, 12], "read_load_timeseri": [0, 2, 12], "read_subsector_group": [0, 2, 12], "sc_historical_data_file_nam": [0, 2, 12], "subsector_groups_hotmaps_filenam": [0, 2, 12], "subsector_groups_str_to_enum_map": [0, 2, 12], "productinput": [0, 2, 11, 12], "read_best_available_technologi": [0, 2, 12], "read_country_group": [0, 2, 12], "read_energy_carrier_consumption_histor": [0, 2, 12], "read_nuts2_installed_capac": [0, 2, 12], "read_production_data": [0, 2, 12], "read_specific_consumption_default": [0, 2, 12], "restsectorinput": [0, 2, 12], "input_manag": [0, 10, 11, 12, 13], "inputmanag": [0, 2, 10, 11, 12], "ctrl_path": [0, 2, 12], "cts_path": [0, 2, 12], "general_path": [0, 2, 12], "hh_path": [0, 2, 12], "industry_path": [0, 2, 12], "input_path": [0, 2, 12], "output_path": [0, 2, 10, 12], "read_set_and_control_paramet": [0, 2, 12], "super_path": [0, 2, 12], "update_set_and_control_paramet": [0, 2, 12], "input_util": [0, 12, 13], "filereadinghelp": [0, 2, 12], "set_path_and_read": [0, 2, 12], "skip_year": [0, 2, 12], "skip_years_in_df": [0, 2, 12], "model_inst": [0, 10, 12, 13], "instance_filt": [0, 3, 5, 12], "cts_instance_filt": [0, 3, 6, 10, 12], "general_instance_filt": [0, 3, 12], "households_instance_filt": [0, 3, 7, 12], "industry_instance_filt": [0, 3, 8, 10, 12], "countri": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12], "sector": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "output": [0, 1, 2, 12, 13], "output_inst": [0, 12, 13], "generate_instance_output": [0, 10, 12], "output_cts_demand_countri": [0, 10, 12], "output_cts_demand_hourly_countri": [0, 10, 12], "output_cts_demand_hourly_nuts2": [0, 10, 12], "output_cts_demand_nuts2": [0, 10, 12], "output_cts_employee_numb": [0, 10, 12], "output_cts_specific_consumpt": [0, 10, 12], "output_gen_gdp": [0, 10, 12], "output_gen_population_forecast": [0, 10, 12], "output_gen_population_forecast_detail": [0, 10, 12], "output_hh_characterist": [0, 10, 12], "output_hh_demand_countri": [0, 10, 12], "output_hh_demand_hourly_countri": [0, 10, 12], "output_hh_demand_hourly_nuts2": [0, 10, 12], "output_hh_demand_nuts2": [0, 10, 12], "output_hh_subsectors_demand": [0, 10, 12], "output_ind_demand_countri": [0, 10, 12], "output_ind_demand_hourly_countri": [0, 10, 12], "output_ind_demand_hourly_nuts2": [0, 10, 12], "output_ind_demand_nuts2": [0, 10, 12], "output_ind_product_amount": [0, 10, 12], "output_ind_specific_consumpt": [0, 10, 12], "output_preprocess": [0, 12, 13], "generate_preprocessing_output": [0, 10, 12], "output_cts_coef_employee_numb": [0, 10, 12], "output_cts_employee_number_visual_countri": [0, 10, 12], "output_cts_employee_number_visual_nuts2": [0, 10, 12], "output_cts_specific_consumption_visu": [0, 10, 12], "output_hh_coef_historical_consumpt": [0, 10, 12], "output_hh_consumption_visual_countri": [0, 10, 12], "output_hh_demand_historical_2018": [0, 10, 12], "output_ind_coef_product_amount": [0, 10, 12], "output_ind_country_group": [0, 10, 12], "output_ind_country_group_visu": [0, 10, 12], "output_ind_product_amount_visu": [0, 10, 12], "output_ind_specific_consumption_visu": [0, 10, 12], "output_util": [0, 12, 13], "filegener": [0, 10, 12], "add_complete_column": [0, 10, 12], "add_entri": [0, 10, 12], "end_sheet": [0, 10, 12], "get_day_directori": [0, 10, 12], "print_all_entri": [0, 10, 12], "print_length_of_all_entri": [0, 10, 12], "save_fil": [0, 10, 12], "start_sheet": [0, 10, 12], "ensure_directory_exist": [0, 10, 12], "generate_timeseries_output": [0, 10, 12], "get_day_folder_path": [0, 10, 12], "shortcut_coef_output": [0, 10, 12], "shortcut_demand_t": [0, 10, 12], "shortcut_save_timeseries_print": [0, 10, 12], "shortcut_sc_output": [0, 10, 12], "output_utility_visu": [0, 12, 13], "plot_coef_in_rang": [0, 10, 12], "plot_coef_with_method_in_rang": [0, 10, 12], "plot_historical_data": [0, 10, 12], "plot_series_detail": [0, 10, 12], "plot_series_simpl": [0, 10, 12], "save_multiple_series_plot": [0, 10, 12], "save_plot": [0, 10, 12], "save_series_plot": [0, 10, 12], "preprocess": [0, 2, 10, 12, 13], "preproccessing_step_two": [0, 12, 13], "countrygroup": [0, 11, 12], "get_countries_in_group": [0, 11, 12], "countrygroupjoin": [0, 11, 12], "get_all_historical_data": [0, 11, 12], "countrygroupjoineddiversifi": [0, 11, 12], "get_coef_for_countri": [0, 11, 12], "groupmanag": [0, 10, 11, 12], "get_coef_for_country_and_product": [0, 11, 12], "is_in_separate_group": [0, 11, 12], "preprocessing_step_on": [0, 10, 12, 13], "countrypreprocess": [0, 10, 11, 12], "ctspreprocess": [0, 11, 12], "preprocess_specific_consumpt": [0, 11, 12], "gdppreprocess": [0, 11, 12], "householdspreprocess": [0, 11, 12], "industrypreprocess": [0, 11, 12], "nuts2preprocess": [0, 11, 12], "populationpreprocess": [0, 11, 12], "productpreprocess": [0, 11, 12], "specificconsumptionpreprocess": [0, 11, 12], "preprocessing_util": [0, 12, 13], "energy_carrier_to_energy_consumpt": [0, 11, 12], "preprocessor": [0, 4, 10, 12, 13], "class": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "base": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "object": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11], "whole": [0, 2, 10, 11], "program": [0, 10], "from": [0, 1, 2, 4, 5, 8, 10, 11], "here": 0, "we": 0, "control": [0, 2, 4, 11], "what": [0, 1, 5, 10], "doe": [0, 1, 10], "highest": 0, "level": [0, 1, 2, 4], "variabl": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11], "input": [0, 1, 2, 4, 10, 11], "hold": [0, 1, 2, 6, 7, 8, 9, 10, 11], "process": [0, 11], "excel": [0, 2, 10], "sheet": [0, 2, 10], "current": [0, 2, 10], "run": 0, "countries_in_group": [0, 2, 5, 11], "dict": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "access": [0, 1, 2, 5, 11], "english": [0, 2], "an": [0, 1, 2, 10, 11], "addit": [0, 1], "layer": 0, "data": [0, 1, 2, 4, 5, 10, 11], "build": 0, "upon": 0, "create_inst": [0, 12, 13], "creat": [0, 1, 10], "instanc": [0, 4, 5, 6, 7, 10], "execute_with_preprocess": [0, 12, 13], "execute_without_preprocess": [0, 12, 13], "onli": [0, 1, 2, 8, 10], "recalcul": 0, "update_set": [0, 12, 13], "reread": 0, "write_all_output": [0, 12, 13], "write": [0, 10], "write_model_output": [0, 12, 13], "come": 0, "write_preprocessing_output": [0, 12, 13], "apply_all_regress": [0, 12, 13], "appli": [0, 1], "avail": [0, 1, 2, 11], "regress": [0, 1], "algorithm": 0, "given": [0, 1, 2, 4, 8, 10, 11], "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "coeffici": [0, 1, 10, 11], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "list": [0, 1, 2, 4, 6, 7, 8, 11], "type": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "A": [0, 1, 2, 8, 10, 11], "summar": 0, "result": [0, 1, 4, 8, 10, 11], "convert_table_to_filtered_data_series_per_countri": [0, 12, 13], "df": [0, 1, 2], "dictionari": [0, 2, 8, 10, 11], "tabl": [0, 2, 10], "kei": 0, "valu": [0, 1, 2, 5, 10], "row": [0, 2], "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "correspond": [0, 1, 5], "column_nam": [0, 10], "column_valu": 0, "datafram": [0, 2], "orient": 0, "first_row_entri": 0, "cut_after_x": [0, 12, 13], "last_x": 0, "cut": 0, "tail": 0, "accord": [0, 1, 2, 6, 8], "entri": [0, 1, 10], "tupl": [0, 1, 2], "being": [0, 1], "larger": 0, "than": [0, 1], "whose": [0, 1, 9, 10], "off": 0, "axi": [0, 1, 2, 10, 11], "indic": [0, 1, 2, 11], "where": [0, 1, 2], "kept": 0, "exp_chang": [0, 12, 13], "start_point": [0, 1, 2], "change_r": [0, 2], "target_x": [0, 1], "calcul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "growth": [0, 1, 2, 4], "point": [0, 1, 2, 10], "y_": 0, "new": [0, 1, 4, 10], "1": [0, 1, 2, 4, 8], "r": [0, 1, 8], "x_": 0, "x_start": 0, "y_start": 0, "float": [0, 1, 2, 4, 6, 7, 8, 10, 11], "x_new": 0, "y_new": 0, "filter_out_nan_and_inf": [0, 12, 13], "filter": [0, 1, 2, 4, 5, 6, 7], "out": 0, "one": [0, 1, 2, 6, 7, 8, 10, 11], "either": [0, 1, 2], "inf": [0, 1], "nan": [0, 1], "float_lists_to_datapoint_list": [0, 12, 13], "list1": 0, "list2": 0, "two": [0, 1], "repres": [0, 1, 6, 7, 8, 9, 10, 11], "gain": 0, "zip": [0, 1], "get_series_rang": [0, 12, 13], "tss": 0, "take": [0, 1], "multipl": [0, 1, 4, 7, 10], "find": [0, 1], "which": [0, 1, 2], "rang": [0, 10], "year": [0, 1, 2, 4, 8, 10, 11], "fall": 0, "seri": [0, 1, 10], "int": [0, 1, 2, 4, 10, 11], "is_permissible_float": [0, 12, 13], "could": 0, "without": [0, 1], "throw": [0, 1], "except": [0, 2], "convers": [0, 1], "bool": [0, 1, 2, 11], "true": [0, 1, 8], "can": [0, 1, 2, 11], "els": [0, 1, 10], "fals": [0, 1, 2, 8], "is_tuple_list_zero": [0, 12, 13], "xy": 0, "wrapper": 0, "second": [0, 1], "ar": [0, 1, 2, 4, 8, 10, 11], "zero": [0, 1, 8], "should": [0, 1, 2, 9, 10, 11], "left": 0, "column": [0, 10], "present": [0, 1, 2], "also": [0, 1, 2], "otherwis": [0, 1], "lin_predict": [0, 12, 13], "f": [0, 1], "k_0": 0, "k_1": 0, "linear_regress": [0, 12, 13], "visual": [0, 2, 10], "whether": [0, 1, 2, 11], "immedi": 0, "plot": [0, 10], "k0": [0, 1], "k1": [0, 1], "log_predict": [0, 12, 13], "ln": 0, "logarithmic_regress": [0, 12, 13], "map_data_i": [0, 12, 13], "compon": [0, 1], "wise": [0, 1], "form": [0, 1, 2, 11], "lambda": [0, 1, 2], "map": [0, 1, 2, 11], "multiply_demand_dictionary_with_scalar": [0, 12, 13], "scalar": [0, 1, 2, 4], "multipli": [0, 1], "everi": [0, 1, 2, 8, 10], "multiply_dictionary_with_demand": [0, 12, 13], "multiply_dictionary_with_scalar": [0, 12, 13], "plot_timeseries_regress": [0, 12, 13], "dr": 0, "titl": 0, "x_label": [0, 10], "y_label": [0, 10], "show": 0, "differ": [0, 1, 2, 4, 5, 11], "option": [0, 1, 4], "label": [0, 10], "none": [0, 1, 2, 10], "quadr_predict": [0, 12, 13], "k_2": 0, "2": [0, 1, 2], "quadratic_regress": [0, 12, 13], "k3": 0, "quadratic_regression_delta": [0, 12, 13], "dict_seri": 0, "delta": 0, "It": [0, 1, 2, 5, 6, 7, 8], "tag": [0, 1], "k2": [0, 1], "offset": [0, 1, 11], "each": [0, 1, 2, 4, 8, 10, 11], "group_coeffici": 0, "str_dict": [0, 12, 13], "more": [0, 2, 10], "readabl": 0, "would": [0, 2], "regular": 0, "python": 0, "implement": 0, "represent": [0, 2], "zip_data_on_x": [0, 12, 13], "xys1": 0, "xys2": 0, "ascending_x": 0, "condit": [0, 1], "match": [0, 8], "nr1": 0, "b": [0, 1], "nr2": 0, "c": [0, 1, 2], "d": [0, 1, 8], "ascend": 0, "If": [0, 1, 2, 4, 10], "effici": [0, 2, 11], "format": [0, 1], "zip_data_on_x_and_map": [0, 12, 13], "combin": [0, 1, 11], "them": [0, 1, 11], "ha": [0, 1, 2, 11], "y1": [0, 1], "y2": [0, 1], "ani": [0, 1, 2, 11], "simpl": [1, 2], "endemo": [1, 13], "alia": [1, 2], "field": [1, 2], "number": [1, 2, 4, 10], "0": [1, 2, 4], "amount": [1, 2, 4, 10, 11], "split": [1, 2, 5, 6, 7, 8, 9, 10, 11], "categori": 1, "provid": [1, 2, 11], "arithmet": 1, "oper": [1, 2], "own": 1, "member": [1, 11], "version": [1, 2], "self": [1, 2, 5], "dt": 1, "attribut": [1, 6, 8, 10], "sum": [1, 4, 5, 6, 7, 8, 9, 11], "q1": 1, "q2": 1, "q3": 1, "q4": 1, "offer": 1, "perform": [1, 2], "between": [0, 1, 2, 4], "fresh": 1, "part": [1, 4], "subtract": 1, "max_subst_h2": 1, "specif": [1, 2, 4, 10, 11], "consumpt": [1, 2, 4, 10, 11], "todo": 1, "bat": [1, 2, 4, 11], "cap": 1, "cannot": 1, "better": 1, "best": [1, 2, 11], "technologi": [1, 2, 4, 11], "inform": [1, 2, 11], "util": [1, 10, 12, 13], "relat": [1, 2, 4, 10, 11], "enum": [1, 2, 4, 5], "uniti": 1, "5": [1, 2], "4": [1, 2], "3": [1, 2, 4], "from_unit": 1, "to_unit": 1, "anoth": [1, 2], "easili": [1, 10], "differenti": 1, "prefer": 1, "wai": 1, "extrapol": [1, 2], "forecast": [1, 2, 4, 8, 10, 11], "method": [1, 2, 10, 11], "group": [1, 2, 4, 10, 11], "lump": 1, "togeth": 1, "share": [1, 2, 4, 11], "But": [1, 10], "addition": 1, "chosen": [1, 2, 10], "quickli": 1, "recognis": 1, "primarili": 1, "ct": [1, 2, 3, 4, 5, 7, 10, 11, 12], "discern": 1, "denot": [1, 2], "_subsector": [1, 2, 4, 5, 6, 7], "everyth": [1, 11], "need": [1, 10], "nut": 1, "region": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "tree": [1, 11], "leaf": 1, "nuts2": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "root": 1, "letter": 1, "code": [1, 2], "node": 1, "navig": 1, "region_nam": [1, 2, 4, 8, 11], "individu": 1, "For": [1, 11], "exampl": [1, 8], "de": 1, "de1": 1, "de11": 1, "de12": 1, "associ": 1, "getter": [1, 2, 4, 5, 6, 8, 11], "": [1, 2, 4, 11], "Not": 1, "de2": 1, "_subregion": 1, "child": 1, "per": [1, 2, 4, 7, 10, 11], "nuts2region_obj": 1, "travers": 1, "recurs": 1, "insert": 1, "depth": 1, "order": [1, 6, 7, 8, 10], "mostli": 1, "debug": [1, 10], "purpos": [1, 10], "region_cod": 1, "directli": [1, 9], "_exp": 1, "x0": 1, "y0": 1, "rate": [1, 2, 4], "_lin": 1, "_quadr": 1, "_offset": 1, "constant": [1, 2], "_method": 1, "_fixed_forecast_method": 1, "anymor": 1, "start_x": 1, "start_i": 1, "growth_rat": 1, "x_axi": 1, "exp_growth_r": 1, "setter": 1, "fixat": 1, "now": 1, "sure": 1, "reset": 1, "progression_data": 1, "depict": 1, "predict": [1, 2, 11], "certain": [1, 2, 4, 8, 11], "progress": 1, "percentage_growth": 1, "_interval_changer": 1, "same": [1, 10], "just": 1, "percentag": [1, 2, 4, 11], "100": [1, 2, 4], "target": [1, 4], "s_x": 1, "r_": 1, "intvl": 1, "_": 1, "s_y": 1, "text": [1, 8], "taken": 1, "interpol": [0, 1, 2], "over": [1, 2, 5, 6, 7, 8, 9, 10], "time": [1, 2, 4, 11], "some": [1, 2], "_data": 1, "last": [1, 2], "error": [1, 2], "strictli": 1, "usag": 1, "invari": 1, "other_t": 1, "refer": [0, 1, 2, 4, 10, 12], "append": 1, "sort": 1, "so": 1, "remain": 1, "valid": [1, 2], "divid": 1, "classmethod": [1, 2, 10, 11], "t": [1, 4, 8, 10], "fill_valu": 1, "fill": [1, 10], "copi": 1, "gap": 1, "t1": 1, "t2": 1, "newli": 1, "merg": 1, "note": 1, "both": [0, 1, 12], "other_td": 1, "gener": [1, 2, 4, 10, 11], "save": [1, 10], "safe": 1, "thei": [1, 2], "were": 1, "befor": 1, "mean": 1, "reus": 1, "veri": 1, "context": 1, "therefor": [1, 11], "found": [0, 2], "set_and_control_paramet": 2, "xlsx": 2, "general_set": 2, "industry_set": 2, "cts_set": 2, "hh_set": 2, "non": 2, "overlap": 2, "our": 2, "ind_": 2, "df_ct": 2, "trend_calc_for_spec": 2, "nuts2_distribution_per_pop_dens": 2, "distribut": [2, 4, 5, 6, 7, 8, 9, 10], "done": 2, "popul": [2, 4, 10, 11], "densiti": [2, 4], "employe": [2, 4, 10, 11], "These": [2, 11], "skip": 2, "last_available_year": 2, "after": 2, "includ": [2, 8], "heat_level": 2, "how": [1, 2], "among": 2, "heat_substitut": 2, "substitut": [2, 4], "ex_gener": 2, "ex_countri": 2, "pd": [2, 10], "_sectors_active_valu": 2, "_parameter_valu": 2, "parameter_str": 2, "target_year": 2, "recognized_countri": 2, "active_countri": 2, "nuts2_vers": 2, "read": [2, 11], "2016": 2, "2021": 2, "toggle_hourly_forecast": 2, "hour": 2, "load": [2, 4, 6], "profil": [2, 4, 6], "toggle_nuts2_resolut": 2, "toggle_graphical_output": 2, "meaning": 2, "messag": 2, "commerti": 2, "trade": [2, 6, 7], "servic": [2, 6, 7], "df_hh": 2, "df_gener": 2, "df_subsector": 2, "ind_gener": 2, "ind_subsector": 2, "intern": 2, "forecast_method": 2, "select": 2, "time_trend_model_activation_quadrat": 2, "trend": [2, 4], "deactiv": 2, "tradit": 2, "approach": 2, "production_quantity_calc_per_capita": 2, "decid": 2, "product": [2, 3, 4, 5, 10, 11, 12], "quantiti": [2, 4, 10], "capita": [2, 11], "project": 2, "nuts2_distribution_based_on_installed_ind_capac": 2, "while": 2, "remov": 2, "outlier": 2, "exclus": 2, "product_set": 2, "Of": [2, 11], "front_label": [2, 10, 11], "product_settings_obj": 2, "active_product_nam": 2, "rest_sector_growth_r": 2, "rest": [2, 4, 8], "use_gdp_as_x": 2, "gdp": [2, 4, 10, 11], "instead": 2, "demand_typ": [2, 4, 11], "ctrl": [2, 4, 11], "dict_employee_number_countri": 2, "ob": 2, "subsector": [2, 4, 5, 6, 7, 8, 9, 10, 11], "country_nam": [2, 4, 5, 6, 7, 8, 9, 10, 11], "dict_employee_number_nuts2": 2, "nuts2_region": [2, 8], "dict_employee_number_country_ct": 2, "energy_carrier_consumpt": 2, "carrier": [2, 11], "energy_carri": 2, "load_profil": 2, "path_to_fil": 2, "sheet_nam": 2, "depend": 2, "euro": 2, "stat": 2, "thousand": [2, 4], "gro\u00df": 2, "und": 2, "einzelhandel": 2, "privat": 2, "b\u00fcro": 2, "hotel": 2, "restaur": 2, "\u00f6ffentlich": 2, "gesundheit": 2, "sozialwesen": 2, "bildung": 2, "sonstig": 2, "respons": [2, 11], "That": 2, "pars": 2, "populationdata": 2, "efficiency_hh": 2, "nuts2_valid_region": 2, "fest": 2, "fossil": 2, "brennstoff": 2, "synthetisch": 2, "gase": 2, "erdga": 2, "oel": 2, "erneuerbar": 2, "energien": 2, "abfael": 2, "elektrizitaet": 2, "waerm": 2, "df_country_pop_hi": 2, "df_country_pop_prog": 2, "df_nuts2_pop_hi": 2, "df_nuts2_pop_prog": 2, "recogn": 2, "histori": 2, "country_popul": 2, "nuts2_popul": 2, "householdinput": 2, "historical_consumpt": 2, "subsector_id": [2, 4, 7], "hw_dict_hot_water_per_person_per_dai": 2, "hot": [2, 4, 7], "water": [2, 4, 7], "person": [0, 1, 2, 4, 7, 12], "dai": [2, 10], "liter": [0, 1, 2, 12], "hw_dict_hot_water_calibr": 2, "calibr": [2, 4], "hw_specific_capac": 2, "capac": [2, 4, 8, 11], "hw_outlet_temperatur": 2, "outlet": [2, 4], "temperatur": [2, 4], "hw_inlet_temperatur": 2, "inlet": [2, 4], "sh_specific_heat": 2, "sh_area_per_household": 2, "area": [2, 4], "ivar": [], "sh_persons_per_household": 2, "deriv": 2, "0002777777777777778": 2, "001": 2, "ga": 2, "solid": 2, "fuel": [0, 1, 2, 12], "007821538148752638": 2, "total": [2, 4, 8], "oil": 2, "petroleum": 2, "012002320102842252": 2, "renew": 2, "wast": 2, "1a_spaceh": 2, "1b_spacecool": 2, "1c_waterh": 2, "1d_cook": 2, "1e_lightingandappli": 2, "1f_otherendus": 2, "space": [2, 4, 7], "controlset": 2, "dict_product_input": 2, "store": 2, "retriev": 2, "specifi": [2, 4, 7], "rest_sector_input": 2, "dict_electricity_profil": 2, "hourli": [2, 4, 6, 7, 8, 10], "dict_heat_profil": 2, "subsector_group": 2, "back_label": [2, 10, 11], "hourly_profil": 2, "subsector_to_group_map": 2, "alu_prim": 2, "alu_sec": 2, "ammonia": 2, "ammonia_class": 2, "arom": 2, "aromate_class": 2, "cement": 2, "chlorin": 2, "copper_prim": 2, "copper_sec": 2, "ethylen": 2, "ethylene_class": 2, "glass": 2, "methanol": 2, "methanol_class": 2, "propylen": 2, "propylene_class": 2, "steel": 2, "steel_direct": 2, "steel_prim": [2, 8], "steel_sec": 2, "nrg_bal_s_pap": 2, "xl": 2, "nrg_bal_s_steel": 2, "hotmaps_task_2": 2, "7_load_profile_industry_non_metalic_minerals_yearlong_2018": 2, "csv": 2, "7_load_profile_industry_chemicals_and_petrochemicals_yearlong_2018": 2, "7_load_profile_industry_food_and_tobacco_yearlong_2018": 2, "7_load_profile_industry_iron_and_steel_yearlong_2018": 2, "7_load_profile_industry_paper_yearlong_2018": 2, "product_nam": [2, 4, 8, 11], "ex_specific_consumpt": 2, "ex_bat": 2, "ex_nuts2_": 2, "ex_country_group": 2, "dict_heat_level": 2, "most": 2, "onc": 2, "excelfil": 2, "default": [2, 11], "instal": [2, 8, 11], "specific_consumption_default": 2, "specific_consumption_histor": [2, 11], "across": [2, 4], "modern": 2, "replac": 2, "old": 2, "ones": 2, "nuts2_region_nam": 2, "capacity_valu": 2, "country_group": 2, "group_typ": [2, 11], "list_of_group": 2, "give": [2, 11], "grp1": [2, 11], "country1": 2, "country2": 2, "grp2": [2, 11], "country4": 2, "installed_capac": 2, "specific_consumpt": [2, 11], "regard": 2, "rest_demand_proportion_basis_year": 2, "follow": 2, "rest_sector_perc": 2, "demand_2018": 2, "rest_calc_basis_year": 2, "rest_sector_heat_level": 2, "connect": [2, 5], "receiv": 2, "general_input": [2, 4, 11], "industry_input": [2, 4], "windowspath": 2, "user": [1, 2], "chri": 2, "onedr": 2, "tum": 2, "document": 2, "master_semester_1": 2, "idp": 2, "commercial_trade_and_servic": 2, "file_nam": [2, 10], "skip_row": 2, "sheet_transform": 2, "helper": 2, "fix": 2, "transform": 2, "rel": [2, 10], "numer": 2, "construct": 2, "previou": 2, "li": 2, "filenam": [2, 10], "nrg_bal": 2, "submodul": [3, 12, 13], "ctsinstancefilt": [3, 4, 5, 6, 7, 10, 12], "get_cts_subsector_nam": [3, 4, 12], "get_employee_share_of_population_countri": [3, 4, 12], "get_employee_share_of_population_nuts2": [3, 4, 12], "get_heat_level": [3, 4, 12], "get_heat_substitut": [3, 4, 12], "get_load_profil": [3, 4, 12], "get_nuts2_region": [3, 4, 12], "get_nuts2_spec_demand_scalar": [3, 4, 12], "get_population_countri": [3, 4, 12], "get_population_nuts2": [3, 4, 12], "get_specific_consumpt": [3, 4, 12], "countryinstancefilt": [3, 4, 5, 10, 12], "get_country_abbrevi": [3, 4, 12], "get_gdp_in_target_year": [3, 4, 12], "get_population_country_in_target_year": [3, 4, 12], "get_population_nuts2_in_target_year": [3, 4, 12], "get_population_nuts2_percentages_in_target_year": [3, 4, 12], "get_population_nuts2_sum": [3, 4, 12], "householdsinstancefilt": [3, 4, 5, 7, 10, 12], "get_area_per_household_in_target_year": [3, 4, 12], "get_avg_persons_per_household_in_target_year": [3, 4, 12], "get_energy_consumption_in_target_year": [3, 4, 12], "get_hot_water_calibration_factor": [3, 4, 12], "get_hot_water_inlet_temperatur": [3, 4, 12], "get_hot_water_liter_per_capita": [3, 4, 12], "get_hot_water_outlet_temperatur": [3, 4, 12], "get_hot_water_specific_capac": [3, 4, 12], "get_load_profile_efh": [3, 4, 12], "get_load_profile_mfh": [3, 4, 12], "get_nuts2_distribut": [3, 4, 12], "get_population_in_target_year": [3, 4, 12], "get_single_household_shar": [3, 4, 12], "get_space_heating_calibration_factor": [3, 4, 12], "get_space_heating_specific_heat_in_target_year": [3, 4, 12], "get_subsector": [3, 4, 5, 6, 12], "industryinstancefilt": [3, 4, 5, 8, 10, 12], "get_active_product_nam": [3, 4, 12], "get_active_products_for_this_countri": [3, 4, 12], "get_nuts2_rest_sector_distribut": [3, 4, 12], "get_rest_sector_basis_year": [3, 4, 12], "get_rest_sector_growth_r": [3, 4, 12], "get_rest_sector_heat_level": [3, 4, 12], "get_rest_sector_hourly_profil": [3, 4, 12], "get_rest_sector_proportion_in_basis_year": [3, 4, 12], "get_target_year": [3, 4, 12], "productinstancefilt": [3, 4, 5, 8, 10, 12], "get_amount": [3, 4, 12], "get_bat": [3, 4, 12], "get_hourly_profil": [3, 4, 12], "get_nuts2_capac": [3, 4, 12], "get_perc_us": [3, 4, 12], "cts_sector": [3, 5, 12], "cts_subsector": [3, 5, 12], "hh_subsector": [3, 5, 12], "household_sector": [3, 5, 12], "industry_sector": [3, 5, 12], "transport_sector": [3, 5, 12], "calculate_total_demand": [3, 5, 8, 12], "get_sector": [3, 5, 12], "cts_input": [4, 11], "countries_pp": [10, 11], "country_if": 4, "emploi": 4, "serv": 4, "actual": [4, 10], "hh_input": 4, "averag": 4, "factor": 4, "m": 4, "singl": [2, 4, 5, 7], "country_instance_filt": [4, 5, 10], "produc": [4, 8], "perc": 4, "commercialtradeservic": [5, 6, 7, 12], "calculate_demand": [3, 5, 6, 7, 8, 9, 12], "calculate_demand_distributed_by_nuts2": [3, 5, 6, 7, 9, 12], "calculate_hourly_demand": [5, 6, 8, 12], "calculate_hourly_demand_distributed_by_nuts2": [5, 6, 8, 12], "ctssubsector": [5, 6, 7, 12], "hotwat": [5, 7, 12], "householdssubsector": [5, 7, 12], "calculate_hourly_demand_efh": [5, 7, 12], "calculate_hourly_demand_mfh": [5, 7, 12], "spaceh": [5, 7, 12], "calculate_forecasted_demand": [5, 8, 12], "calculate_forecasted_demand_distributed_by_nuts2": [5, 8, 12], "calculate_forecasted_hourly_demand": [5, 8, 12], "calculate_forecasted_hourly_demand_distributed_by_nuts2": [5, 8, 12], "calculate_rest_demand_distributed_by_nuts2": [5, 8, 12], "calculate_rest_sector_demand": [5, 8, 12], "calculate_rest_sector_hourly_demand": [5, 8, 12], "calculate_rest_sector_hourly_demand_distributed_by_nuts2": [5, 8, 12], "calculate_total_demand_distributed_by_nuts2": [5, 8, 12], "calculate_total_hourly_demand": [5, 8, 12], "calculate_total_hourly_demand_distributes_by_nuts2": [5, 8, 12], "get_product": [5, 8, 12], "get_demand_distributed_by_nuts2": [5, 8, 12], "ind_if": 5, "prod_if": 5, "cts_if": [5, 10], "hh_if": [5, 7, 10], "complet": [5, 10], "pass": 5, "_country_nam": [5, 6, 7, 8], "en": 5, "_sector": 5, "identifi": 5, "sector_id": 5, "id": 5, "parent": [4, 5], "have": [5, 10], "common": 5, "al": [6, 7], "locat": [6, 7, 8], "commerci": [6, 7], "belong": [4, 5, 6, 7, 10, 11], "_subsector_nam": [6, 7], "_cts_if": [6, 7], "equat": 7, "_hh_if": 7, "product_instance_filt": [4, 8, 10], "_product": 8, "calculate_demand_split_by_nuts2": 8, "rest_": 8, "start_year": 8, "perc_": 8, "demand_": 8, "_empti": 8, "p": 8, "c_": 8, "heat_": 8, "region_demand": 8, "relev": 8, "yet": [], "hh_instance_filt": 10, "generate_x_output": 10, "characterist": 10, "simplifi": 10, "product_if": 10, "2018": 10, "group_manag": 10, "directori": 10, "tool": 10, "excel_writ": 10, "excelwrit": 10, "writer": 10, "current_sheet_nam": 10, "keep": 10, "track": 10, "written": 10, "current_out_dict": 10, "out_file_path": 10, "mainli": 10, "column_cont": 10, "pai": 10, "attent": 10, "In": 10, "length": 10, "stop": 10, "edit": 10, "wa": 10, "wrap": 10, "fg": 10, "year_rang": 10, "shortcut": 10, "correctli": 10, "potenti": 10, "cover": 10, "sc": 10, "start_end": 10, "color_lin": 10, "color_log": 10, "color_quadr": 10, "color_exp": 10, "possibl": 10, "color": 10, "td": 10, "dot": 10, "palett": 10, "tdss": 10, "imag": 10, "front": 10, "back": 10, "image_label": 10, "contribut": [4, 10, 11], "stage": 11, "_countries_in_group": 11, "_group_coef": 11, "_joined_data": 11, "diversifi": 11, "_coef_tupl": 11, "_offset_dict": 11, "manag": 11, "pre": 11, "obtain": [0, 1, 11], "via": 11, "separate_countries_group": 11, "joined_group": 11, "country_to_group_map": 11, "its": 11, "group_id": 11, "population_pp": 11, "wide": 11, "gdp_pp": 11, "has_nuts2": 11, "nuts2_pp": 11, "industry_pp": 11, "pop_hi": 11, "pop_nuts2_hi": 11, "employee_share_in_subsector_countri": 11, "employee_share_in_subsector_nuts2": 11, "gdp_historical_pp": 11, "gdp_prognosis_pp": 11, "households_input": 11, "gdp_hi": 11, "products_pp": 11, "nuts2_population_data": 11, "see": 11, "population_historical_tree_root": 11, "population_prognosis_tree_root": 11, "population_historical_whole_countri": 11, "population_whole_country_prognosi": 11, "product_input": 11, "population_histor": 11, "gdp_histor": 11, "amount_vs_year": 11, "amount_vs_gdp": 11, "amount_per_capita_vs_year": 11, "amount_per_capita_vs_gdp": 11, "specific_consumption_pp": 11, "_nuts2_installed_capac": 11, "quantity_per_year": 11, "default_specific_consumpt": 11, "historical_sc_avail": 11, "dict_ec_hi": 11, "up": 11, "energy_carrier_nam": 11, "efficiency_tupl": 11, "consumption_amount_data": 11, "energy_consumption_sum": 11, "heat_consumption_sum": 11, "subpackag": [12, 13], "content": 13, "billion": [0, 1, 12], "million": [0, 1, 2, 12], "standard": [0, 1, 12], "kilo": [0, 1, 12], "m3": [0, 1, 12], "traffictyp": [0, 1, 2, 4, 9, 11, 12], "freight": [0, 1, 2, 12], "transportmod": [0, 1, 2, 4, 9, 11, 12], "bu": [0, 1, 2, 12], "car": [0, 1, 2, 12], "flight": [0, 1, 2, 12], "rail": [0, 1, 2, 12], "road": [0, 1, 2, 12], "road_rail": [0, 1, 2, 12], "road_rail_ship": [0, 1, 2, 12], "ship": [0, 1, 2, 12], "transportmodalsplitmethod": [0, 1, 2, 12], "historical_const": [0, 1, 2, 12], "historical_time_trend": [0, 1, 2, 12], "user_defin": [0, 1, 2, 12], "transportset": [0, 2, 12], "map_model_split_method_string_to_enum": [0, 2, 12], "input_output_path": [], "transport_path": [0, 2, 12], "output_tra_coef_modal_split": [0, 10, 12], "output_tra_modal_split_visu": [0, 10, 12], "transportpreprocess": [0, 11, 12], "exponential_interpol": [0, 12, 13], "interpol_i": 0, "right": 0, "find_interval_between_datapoint": [0, 12, 13], "target_i": 0, "neighbor": 0, "enclos": 0, "10": 1, "9": 1, "8": 1, "11": 1, "6": [1, 2], "7": [1, 2], "traffic": [1, 2, 4, 9, 10, 11], "mode": 1, "modal": [1, 2, 4, 9, 10, 11], "transport_set": 2, "hh": 2, "single_households_shar": 2, "df_transport": 2, "tra": 2, "split_method": 2, "scenario_selection_final_energy_demand": 2, "scenario": 2, "final": [1, 2], "vehicl": 2, "case": 2, "toggle_calculate_rest_subsector": 2, "ind_production_reference_year": 2, "defin": [1, 2], "hw_dict_space_heating_calibr": 2, "nuts2_installed_capac": 2, "instancefilt": [3, 4, 5, 12], "get_energy_consumption_lighting_and_appliances_in_target_year": [3, 4, 12], "light": 4, "applianc": 4, "special": 4, "_instance_filt": 5, "transport_instance_filt": [0, 3, 9, 12], "transportinstancefilt": [3, 4, 5, 9, 10, 12], "sectors_pp": 11, "transport_input": [4, 11], "modal_split_timeseri": 11, "transportinput": [0, 2, 4, 11, 12], "mj": [0, 1, 12], "pj": [0, 1, 12], "transportfinalenergydemandscenario": [0, 1, 2, 12], "map_final_energy_demand_scenario_to_enum": [0, 2, 12], "output_tra_demand_hourly_countri": [0, 10, 12], "output_tra_demand_hourly_nuts2": [0, 10, 12], "output_tra_energy_demand_countri": [0, 10, 12], "output_tra_energy_demand_detail": [0, 10, 12], "output_tra_energy_demand_nuts2": [0, 10, 12], "output_tra_kilomet": [0, 10, 12], "output_tra_kilometers_nuts2": [0, 10, 12], "output_tra_modal_split": [0, 10, 12], "output_tra_pkm_tkm_hourly_countri": [0, 10, 12], "output_tra_pkm_tkm_hourly_nuts2": [0, 10, 12], "output_tra_production_volum": [0, 10, 12], "13": 1, "12": 1, "get_historical_amount": [3, 4, 12], "get_product_amount_historical_in_year": [3, 4, 12], "get_product_amount_sum_country_in_target_year": [3, 4, 12], "get_product_amount_sum_nuts2_in_target_year": [3, 4, 12], "ton": 4, "calculate_hourly_demand_efh_distributed_by_nuts2": [5, 7, 12], "calculate_hourly_demand_mfh_distributed_by_nuts2": [5, 7, 12], "calculate_demand_for_traffic_typ": [5, 9, 12], "calculate_demand_for_traffic_type_distributed_by_nuts2": [5, 9, 12], "calculate_subsector_demand": [5, 9, 12], "calculate_subsector_demand_distributed_by_nuts2": [5, 9, 12], "tra_if": 5, "traffic_typ": [2, 4, 9], "tra_instance_filt": 10, "traffic_if": 10, "kilomet": [2, 4, 10], "industry_if": 10, "input_transport": [0, 12, 13], "read_energy_per_sourc": [0, 2, 12], "read_modal_split_sheet": [0, 2, 12], "read_specific_km": [0, 2, 12], "read_timeline_perc": [0, 2, 12], "tra_modal_list": [0, 2, 12], "tra_modal_split_group": [0, 2, 12], "tra_traffic_typ": [0, 2, 12], "traffic_path": 2, "kilometr": [2, 4], "travel": 2, "transport_mod": 2, "modal_split_hi": 2, "modal_split_user_def": 2, "modal_ukm_energy_consumpt": 2, "pkm": 2, "tkm": 2, "demand_split_refer": 2, "real": 2, "demand_split_us": 2, "df_energy_per_sourc": 2, "dict_df_modal_split": 2, "panda": 2, "core": 2, "frame": 2, "dict_specific_km": 2, "desired_unit": 2, "reference_year": 2, "desir": 2, "timelin": 2, "get_energy_consumption_of_mod": [3, 4, 12], "get_historical_population_in_certain_year": [3, 4, 12], "get_modal_group_par": [3, 4, 12], "get_modal_group_percentages_in_target_year": [3, 4, 12], "get_modal_share_in_target_year": [3, 4, 12], "get_modals_for_traffic_typ": [3, 4, 12], "get_nuts2_distribution_scalar": [3, 4, 12], "get_nuts2_region_nam": [3, 4, 12], "get_perc_modal_to_demand_type_in_target_year": [3, 4, 12], "get_specific_unit_km_in_reference_year": [3, 4, 12], "get_unit_km_in_target_year_countri": [3, 4, 12], "get_unit_km_in_target_year_nuts2": [3, 4, 12], "modal_id": 4, "ukm": 4, "modal_group_parent_id": 4}, "objects": {"": [[0, 0, 0, "-", "endemo2"]], "endemo2": [[1, 0, 0, "-", "data_structures"], [0, 0, 0, "-", "endemo"], [2, 0, 0, "-", "input_and_settings"], [3, 0, 0, "-", "model_instance"], [10, 0, 0, "-", "output"], [11, 0, 0, "-", "preprocessing"], [0, 0, 0, "-", "utility"]], "endemo2.data_structures": [[1, 0, 0, "-", "containers"], [1, 0, 0, "-", "conversions_string"], [1, 0, 0, "-", "conversions_unit"], [1, 0, 0, "-", "enumerations"], [1, 0, 0, "-", "nuts_tree"], [1, 0, 0, "-", "prediction_models"]], "endemo2.data_structures.containers": [[1, 1, 1, "", "CA"], [1, 1, 1, "", "Datapoint"], [1, 1, 1, "", "Demand"], [1, 1, 1, "", "EH"], [1, 1, 1, "", "Heat"], [1, 1, 1, "", "HisProg"], [1, 1, 1, "", "Interval"], [1, 1, 1, "", "SpecConsum"]], "endemo2.data_structures.containers.CA": [[1, 2, 1, "", "alpha2"], [1, 2, 1, "", "alpha3"], [1, 2, 1, "", "german_name"]], "endemo2.data_structures.containers.Datapoint": [[1, 2, 1, "", "x"], [1, 2, 1, "", "y"]], "endemo2.data_structures.containers.Demand": [[1, 3, 1, "", "add"], [1, 3, 1, "", "copy_multiply"], [1, 3, 1, "", "copy_scale"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_sum"], [1, 3, 1, "", "scale"], [1, 3, 1, "", "set"]], "endemo2.data_structures.containers.EH": [[1, 2, 1, "", "electricity"], [1, 2, 1, "", "heat"]], "endemo2.data_structures.containers.Heat": [[1, 3, 1, "", "copy_add"], [1, 3, 1, "", "copy_multiply"], [1, 3, 1, "", "copy_multiply_scalar"], [1, 3, 1, "", "get_sum"], [1, 3, 1, "", "mutable_add"], [1, 3, 1, "", "mutable_multiply_scalar"], [1, 3, 1, "", "mutable_sub"]], "endemo2.data_structures.containers.HisProg": [[1, 2, 1, "", "historical"], [1, 2, 1, "", "prognosis"]], "endemo2.data_structures.containers.Interval": [[1, 2, 1, "", "end"], [1, 2, 1, "", "start"]], "endemo2.data_structures.containers.SpecConsum": [[1, 3, 1, "", "cap_at_bat"], [1, 3, 1, "", "scale"]], "endemo2.data_structures.conversions_unit": [[1, 1, 1, "", "Unit"], [1, 4, 1, "", "convert"], [1, 4, 1, "", "get_conversion_scalar"]], "endemo2.data_structures.conversions_unit.Unit": [[1, 2, 1, "", "Billion"], [1, 2, 1, "", "GJ"], [1, 2, 1, "", "GWh"], [1, 2, 1, "", "MJ"], [1, 2, 1, "", "MWh"], [1, 2, 1, "", "Million"], [1, 2, 1, "", "PJ"], [1, 2, 1, "", "Standard"], [1, 2, 1, "", "TJ"], [1, 2, 1, "", "TWh"], [1, 2, 1, "", "kWh"], [1, 2, 1, "", "kilo"], [1, 2, 1, "", "liter"], [1, 2, 1, "", "m3"]], "endemo2.data_structures.enumerations": [[1, 1, 1, "", "DemandType"], [1, 1, 1, "", "ForecastMethod"], [1, 1, 1, "", "GroupType"], [1, 1, 1, "", "HouseholdsSubsectorId"], [1, 1, 1, "", "ScForecastMethod"], [1, 1, 1, "", "SectorIdentifier"], [1, 1, 1, "", "StartPoint"], [1, 1, 1, "", "SubsectorGroup"], [1, 1, 1, "", "TrafficType"], [1, 1, 1, "", "TransportFinalEnergyDemandScenario"], [1, 1, 1, "", "TransportModal"], [1, 1, 1, "", "TransportModalSplitMethod"]], "endemo2.data_structures.enumerations.DemandType": [[1, 2, 1, "", "ELECTRICITY"], [1, 2, 1, "", "FUEL"], [1, 2, 1, "", "HEAT"], [1, 2, 1, "", "HYDROGEN"]], "endemo2.data_structures.enumerations.ForecastMethod": [[1, 2, 1, "", "EXPONENTIAL"], [1, 2, 1, "", "LINEAR"], [1, 2, 1, "", "LOGARITHMIC"], [1, 2, 1, "", "QUADRATIC"], [1, 2, 1, "", "QUADRATIC_OFFSET"]], "endemo2.data_structures.enumerations.GroupType": [[1, 2, 1, "", "EMPTY"], [1, 2, 1, "", "JOINED"], [1, 2, 1, "", "JOINED_DIVERSIFIED"], [1, 2, 1, "", "SEPARATE"]], "endemo2.data_structures.enumerations.HouseholdsSubsectorId": [[1, 2, 1, "", "COOKING"], [1, 2, 1, "", "LIGHTING_AND_APPLIANCES"], [1, 2, 1, "", "OTHER"], [1, 2, 1, "", "SPACE_COOLING"], [1, 2, 1, "", "SPACE_HEATING"], [1, 2, 1, "", "WATER_HEATING"]], "endemo2.data_structures.enumerations.ScForecastMethod": [[1, 2, 1, "", "CONST_LAST"], [1, 2, 1, "", "CONST_MEAN"], [1, 2, 1, "", "LINEAR"], [1, 2, 1, "", "LOGARITHMIC"]], "endemo2.data_structures.enumerations.SectorIdentifier": [[1, 2, 1, "", "COMMERCIAL_TRADE_SERVICES"], [1, 2, 1, "", "HOUSEHOLDS"], [1, 2, 1, "", "INDUSTRY"], [1, 2, 1, "", "TRANSPORT"]], "endemo2.data_structures.enumerations.StartPoint": [[1, 2, 1, "", "AVERAGE_VALUE"], [1, 2, 1, "", "LAST_AVAILABLE"], [1, 2, 1, "", "MANUAL"]], "endemo2.data_structures.enumerations.SubsectorGroup": [[1, 2, 1, "", "CHEMICALS_AND_PETROCHEMICALS"], [1, 2, 1, "", "FOOD_AND_TOBACCO"], [1, 2, 1, "", "IRON_AND_STEEL"], [1, 2, 1, "", "NON_METALIC_MINERALS"], [1, 2, 1, "", "PAPER"]], "endemo2.data_structures.enumerations.TrafficType": [[1, 2, 1, "", "BOTH"], [1, 2, 1, "", "FREIGHT"], [1, 2, 1, "", "PERSON"]], "endemo2.data_structures.enumerations.TransportFinalEnergyDemandScenario": [[1, 2, 1, "", "REFERENCE"], [1, 2, 1, "", "USER_DEFINED"]], "endemo2.data_structures.enumerations.TransportModal": [[1, 2, 1, "", "bus"], [1, 2, 1, "", "car"], [1, 2, 1, "", "flight"], [1, 2, 1, "", "rail"], [1, 2, 1, "", "road"], [1, 2, 1, "", "road_rail"], [1, 2, 1, "", "road_rail_ship"], [1, 2, 1, "", "ship"]], "endemo2.data_structures.enumerations.TransportModalSplitMethod": [[1, 2, 1, "", "HISTORICAL_CONSTANT"], [1, 2, 1, "", "HISTORICAL_TIME_TREND"], [1, 2, 1, "", "USER_DEFINED"]], "endemo2.data_structures.nuts_tree": [[1, 1, 1, "", "NutsRegion"], [1, 1, 1, "", "NutsRegionLeaf"], [1, 1, 1, "", "NutsRegionNode"]], "endemo2.data_structures.nuts_tree.NutsRegionLeaf": [[1, 3, 1, "", "get"]], "endemo2.data_structures.nuts_tree.NutsRegionNode": [[1, 3, 1, "", "add_leaf_region"], [1, 3, 1, "", "get_all_leaf_nodes"], [1, 3, 1, "", "get_nodes_dfs"], [1, 3, 1, "", "get_region_name"], [1, 3, 1, "", "get_specific_node"]], "endemo2.data_structures.prediction_models": [[1, 1, 1, "", "Coef"], [1, 1, 1, "", "IntervalForecast"], [1, 1, 1, "", "RigidTimeseries"], [1, 1, 1, "", "Timeseries"], [1, 1, 1, "", "TwoDseries"]], "endemo2.data_structures.prediction_models.Coef": [[1, 3, 1, "", "get_exp"], [1, 3, 1, "", "get_exp_y"], [1, 3, 1, "", "get_function_y"], [1, 3, 1, "", "get_lin"], [1, 3, 1, "", "get_lin_y"], [1, 3, 1, "", "get_log"], [1, 3, 1, "", "get_log_y"], [1, 3, 1, "", "get_method"], [1, 3, 1, "", "get_offset"], [1, 3, 1, "", "get_quadr"], [1, 3, 1, "", "get_quadr_offset_y"], [1, 3, 1, "", "get_quadr_y"], [1, 3, 1, "", "set_exp"], [1, 3, 1, "", "set_exp_growth_rate"], [1, 3, 1, "", "set_exp_start_point"], [1, 3, 1, "", "set_lin"], [1, 3, 1, "", "set_log"], [1, 3, 1, "", "set_method"], [1, 3, 1, "", "set_offset"], [1, 3, 1, "", "set_quadr"]], "endemo2.data_structures.prediction_models.IntervalForecast": [[1, 3, 1, "", "get_forecast"]], "endemo2.data_structures.prediction_models.RigidTimeseries": [[1, 3, 1, "", "get_last_available_data_entry_or_zero"], [1, 3, 1, "", "get_value_at_year"]], "endemo2.data_structures.prediction_models.Timeseries": [[1, 3, 1, "", "add"], [1, 3, 1, "", "append_others_data"], [1, 3, 1, "", "divide_by"], [1, 3, 1, "", "fill_empty_years_with_value"], [1, 3, 1, "", "fill_own_empty_years_with_value"], [1, 3, 1, "", "get_last_data_entry"], [1, 3, 1, "", "get_value_at_year"], [1, 3, 1, "", "get_value_at_year_else_zero"], [1, 3, 1, "", "map_two_timeseries"], [1, 3, 1, "", "map_y"], [1, 3, 1, "", "merge_two_timeseries"], [1, 3, 1, "", "scale"]], "endemo2.data_structures.prediction_models.TwoDseries": [[1, 3, 1, "", "append_others_data"], [1, 3, 1, "", "generate_coef"], [1, 3, 1, "", "get_coef"], [1, 3, 1, "", "get_data"], [1, 3, 1, "", "get_mean_y"], [1, 3, 1, "", "is_empty"], [1, 3, 1, "", "is_zero"]], "endemo2.endemo": [[0, 1, 1, "", "Endemo"]], "endemo2.endemo.Endemo": [[0, 3, 1, "", "create_instance"], [0, 3, 1, "", "execute_with_preprocessing"], [0, 3, 1, "", "execute_without_preprocessing"], [0, 3, 1, "", "update_settings"], [0, 3, 1, "", "write_all_output"], [0, 3, 1, "", "write_model_output"], [0, 3, 1, "", "write_preprocessing_output"]], "endemo2.input_and_settings": [[2, 0, 0, "-", "control_parameters"], [2, 0, 0, "-", "input_cts"], [2, 0, 0, "-", "input_general"], [2, 0, 0, "-", "input_households"], [2, 0, 0, "-", "input_industry"], [2, 0, 0, "-", "input_manager"], [2, 0, 0, "-", "input_transport"], [2, 0, 0, "-", "input_utility"]], "endemo2.input_and_settings.control_parameters": [[2, 1, 1, "", "ControlParameters"], [2, 1, 1, "", "CtsSettings"], [2, 1, 1, "", "GeneralSettings"], [2, 1, 1, "", "HouseholdSettings"], [2, 1, 1, "", "IndustrySettings"], [2, 1, 1, "", "ProductSettings"], [2, 1, 1, "", "TransportSettings"]], "endemo2.input_and_settings.control_parameters.CtsSettings": [[2, 2, 1, "", "map_sc_forecast_method"]], "endemo2.input_and_settings.control_parameters.GeneralSettings": [[2, 3, 1, "", "get_active_sectors"], [2, 3, 1, "", "get_parameter"], [2, 2, 1, "", "sector_id_map"]], "endemo2.input_and_settings.control_parameters.IndustrySettings": [[2, 2, 1, "", "forecast_map"]], "endemo2.input_and_settings.control_parameters.ProductSettings": [[2, 2, 1, "", "active"], [2, 2, 1, "", "efficiency_improvement"], [2, 2, 1, "", "manual_exp_change_rate"], [2, 2, 1, "", "perc_used"]], "endemo2.input_and_settings.control_parameters.TransportSettings": [[2, 2, 1, "", "map_final_energy_demand_scenario_to_enum"], [2, 2, 1, "", "map_model_split_method_string_to_enum"]], "endemo2.input_and_settings.input_cts": [[2, 1, 1, "", "CtsInput"]], "endemo2.input_and_settings.input_cts.CtsInput": [[2, 3, 1, "", "read_employee_per_subsector"], [2, 3, 1, "", "read_number_employees_cts"], [2, 2, 1, "", "subsector_names"]], "endemo2.input_and_settings.input_general": [[2, 1, 1, "", "Abbreviations"], [2, 1, 1, "", "GeneralInput"], [2, 1, 1, "", "PopulationInput"]], "endemo2.input_and_settings.input_general.Abbreviations": [[2, 2, 1, "", "dict_alpha2_en_map"], [2, 2, 1, "", "dict_de_en_map"], [2, 2, 1, "", "dict_en_alpha2_map"]], "endemo2.input_and_settings.input_general.GeneralInput": [[2, 2, 1, "", "sc_historical_sheet_names"]], "endemo2.input_and_settings.input_households": [[2, 1, 1, "", "HouseholdsInput"]], "endemo2.input_and_settings.input_households.HouseholdsInput": [[2, 2, 1, "", "hh_energy_carrier_unit_conversion"], [2, 2, 1, "", "hh_his_sheets_skip_rows"], [2, 2, 1, "", "hh_input_sheet_names"], [2, 3, 1, "", "hw_read_hot_water_input"], [2, 3, 1, "", "read_historical_consumption"], [2, 3, 1, "", "sh_read_space_heating_input"]], "endemo2.input_and_settings.input_industry": [[2, 1, 1, "", "IndustryInput"], [2, 1, 1, "", "ProductInput"], [2, 1, 1, "", "RestSectorInput"]], "endemo2.input_and_settings.input_industry.IndustryInput": [[2, 2, 1, "", "product_data_access"], [2, 3, 1, "", "read_heat_levels"], [2, 3, 1, "", "read_load_timeseries"], [2, 3, 1, "", "read_subsector_groups"], [2, 2, 1, "", "sc_historical_data_file_names"], [2, 2, 1, "", "subsector_groups_hotmaps_filenames"], [2, 2, 1, "", "subsector_groups_str_to_enum_map"]], "endemo2.input_and_settings.input_industry.ProductInput": [[2, 3, 1, "", "read_best_available_technology"], [2, 3, 1, "", "read_country_groups"], [2, 3, 1, "", "read_energy_carrier_consumption_historical"], [2, 3, 1, "", "read_nuts2_installed_capacities"], [2, 3, 1, "", "read_production_data"], [2, 3, 1, "", "read_specific_consumption_default"]], "endemo2.input_and_settings.input_manager": [[2, 1, 1, "", "InputManager"]], "endemo2.input_and_settings.input_manager.InputManager": [[2, 2, 1, "", "ctrl_path"], [2, 2, 1, "", "cts_path"], [2, 2, 1, "", "general_path"], [2, 2, 1, "", "hh_path"], [2, 2, 1, "", "industry_path"], [2, 2, 1, "", "input_path"], [2, 2, 1, "", "output_path"], [2, 3, 1, "", "read_set_and_control_parameters"], [2, 2, 1, "", "super_path"], [2, 2, 1, "", "transport_path"], [2, 3, 1, "", "update_set_and_control_parameters"]], "endemo2.input_and_settings.input_transport": [[2, 1, 1, "", "TransportInput"]], "endemo2.input_and_settings.input_transport.TransportInput": [[2, 3, 1, "", "read_energy_per_source"], [2, 3, 1, "", "read_modal_split_sheets"], [2, 3, 1, "", "read_specific_km"], [2, 3, 1, "", "read_timeline_perc"], [2, 2, 1, "", "tra_modal_lists"], [2, 2, 1, "", "tra_modal_split_groups"], [2, 2, 1, "", "tra_traffic_types"]], "endemo2.input_and_settings.input_utility": [[2, 1, 1, "", "FileReadingHelper"], [2, 4, 1, "", "read_energy_carrier_consumption_historical"], [2, 4, 1, "", "skip_years_in_df"]], "endemo2.input_and_settings.input_utility.FileReadingHelper": [[2, 3, 1, "", "get"], [2, 3, 1, "", "set_path_and_read"], [2, 3, 1, "", "skip_years"]], "endemo2.model_instance": [[4, 0, 0, "-", "instance_filter"], [5, 0, 0, "-", "model"]], "endemo2.model_instance.instance_filter": [[4, 0, 0, "-", "cts_instance_filter"], [4, 0, 0, "-", "general_instance_filter"], [4, 0, 0, "-", "households_instance_filter"], [4, 0, 0, "-", "industry_instance_filter"], [4, 0, 0, "-", "transport_instance_filter"]], "endemo2.model_instance.instance_filter.cts_instance_filter": [[4, 1, 1, "", "CtsInstanceFilter"]], "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter": [[4, 3, 1, "", "get_cts_subsector_names"], [4, 3, 1, "", "get_employee_share_of_population_country"], [4, 3, 1, "", "get_employee_share_of_population_nuts2"], [4, 3, 1, "", "get_heat_levels"], [4, 3, 1, "", "get_heat_substitution"], [4, 3, 1, "", "get_load_profile"], [4, 3, 1, "", "get_nuts2_regions"], [4, 3, 1, "", "get_nuts2_spec_demand_scalar"], [4, 3, 1, "", "get_population_country"], [4, 3, 1, "", "get_population_nuts2"], [4, 3, 1, "", "get_specific_consumption"]], "endemo2.model_instance.instance_filter.general_instance_filter": [[4, 1, 1, "", "CountryInstanceFilter"], [4, 1, 1, "", "InstanceFilter"]], "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter": [[4, 3, 1, "", "get_active_sectors"], [4, 3, 1, "", "get_country_abbreviations"], [4, 3, 1, "", "get_gdp_in_target_year"], [4, 3, 1, "", "get_population_country_in_target_year"], [4, 3, 1, "", "get_population_nuts2_in_target_year"], [4, 3, 1, "", "get_population_nuts2_percentages_in_target_year"], [4, 3, 1, "", "get_population_nuts2_sum"]], "endemo2.model_instance.instance_filter.households_instance_filter": [[4, 1, 1, "", "HouseholdsInstanceFilter"]], "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter": [[4, 3, 1, "", "get_area_per_household_in_target_year"], [4, 3, 1, "", "get_avg_persons_per_household_in_target_year"], [4, 3, 1, "", "get_energy_consumption_in_target_year"], [4, 3, 1, "", "get_energy_consumption_lighting_and_appliances_in_target_year"], [4, 3, 1, "", "get_heat_levels"], [4, 3, 1, "", "get_hot_water_calibration_factor"], [4, 3, 1, "", "get_hot_water_inlet_temperature"], [4, 3, 1, "", "get_hot_water_liter_per_capita"], [4, 3, 1, "", "get_hot_water_outlet_temperature"], [4, 3, 1, "", "get_hot_water_specific_capacity"], [4, 3, 1, "", "get_load_profile_efh"], [4, 3, 1, "", "get_load_profile_mfh"], [4, 3, 1, "", "get_nuts2_distribution"], [4, 3, 1, "", "get_population_in_target_year"], [4, 3, 1, "", "get_single_household_share"], [4, 3, 1, "", "get_space_heating_calibration_factor"], [4, 3, 1, "", "get_space_heating_specific_heat_in_target_year"], [4, 3, 1, "", "get_subsectors"]], "endemo2.model_instance.instance_filter.industry_instance_filter": [[4, 1, 1, "", "IndustryInstanceFilter"], [4, 1, 1, "", "ProductInstanceFilter"]], "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter": [[4, 3, 1, "", "get_active_product_names"], [4, 3, 1, "", "get_active_products_for_this_country"], [4, 3, 1, "", "get_nuts2_regions"], [4, 3, 1, "", "get_nuts2_rest_sector_distribution"], [4, 3, 1, "", "get_rest_sector_basis_year"], [4, 3, 1, "", "get_rest_sector_growth_rate"], [4, 3, 1, "", "get_rest_sector_heat_levels"], [4, 3, 1, "", "get_rest_sector_hourly_profile"], [4, 3, 1, "", "get_rest_sector_proportion_in_basis_year"], [4, 3, 1, "", "get_target_year"]], "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter": [[4, 3, 1, "", "get_amount"], [4, 3, 1, "", "get_bat"], [4, 3, 1, "", "get_heat_levels"], [4, 3, 1, "", "get_heat_substitution"], [4, 3, 1, "", "get_historical_amount"], [4, 3, 1, "", "get_hourly_profile"], [4, 3, 1, "", "get_nuts2_capacities"], [4, 3, 1, "", "get_perc_used"], [4, 3, 1, "", "get_product_amount_historical_in_year"], [4, 3, 1, "", "get_product_amount_sum_country_in_target_year"], [4, 3, 1, "", "get_product_amount_sum_nuts2_in_target_year"], [4, 3, 1, "", "get_specific_consumption"]], "endemo2.model_instance.instance_filter.transport_instance_filter": [[4, 1, 1, "", "TransportInstanceFilter"]], "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter": [[4, 3, 1, "", "get_energy_consumption_of_modal"], [4, 3, 1, "", "get_historical_population_in_certain_year"], [4, 3, 1, "", "get_modal_group_parent"], [4, 3, 1, "", "get_modal_group_percentages_in_target_year"], [4, 3, 1, "", "get_modal_share_in_target_year"], [4, 3, 1, "", "get_modals_for_traffic_type"], [4, 3, 1, "", "get_nuts2_distribution_scalars"], [4, 3, 1, "", "get_nuts2_region_names"], [4, 3, 1, "", "get_perc_modal_to_demand_type_in_target_year"], [4, 3, 1, "", "get_population_country_in_target_year"], [4, 3, 1, "", "get_population_nuts2_in_target_year"], [4, 3, 1, "", "get_specific_unit_km_in_reference_year"], [4, 3, 1, "", "get_unit_km_in_target_year_country"], [4, 3, 1, "", "get_unit_km_in_target_year_nuts2"]], "endemo2.model_instance.model": [[5, 0, 0, "-", "country"], [6, 0, 0, "-", "cts"], [7, 0, 0, "-", "households"], [8, 0, 0, "-", "industry"], [5, 0, 0, "-", "sector"], [9, 0, 0, "-", "transport"]], "endemo2.model_instance.model.country": [[5, 1, 1, "", "Country"]], "endemo2.model_instance.model.country.Country": [[5, 3, 1, "", "calculate_total_demand"], [5, 3, 1, "", "get_sector"]], "endemo2.model_instance.model.cts": [[6, 0, 0, "-", "cts_sector"], [6, 0, 0, "-", "cts_subsector"]], "endemo2.model_instance.model.cts.cts_sector": [[6, 1, 1, "", "CommercialTradeServices"]], "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices": [[6, 3, 1, "", "calculate_demand"], [6, 3, 1, "", "calculate_demand_distributed_by_nuts2"], [6, 3, 1, "", "calculate_hourly_demand"], [6, 3, 1, "", "calculate_hourly_demand_distributed_by_nuts2"], [6, 3, 1, "", "get_subsectors"]], "endemo2.model_instance.model.cts.cts_subsector": [[6, 1, 1, "", "CtsSubsector"]], "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector": [[6, 3, 1, "", "calculate_demand"], [6, 3, 1, "", "calculate_demand_distributed_by_nuts2"], [6, 3, 1, "", "calculate_hourly_demand"], [6, 3, 1, "", "calculate_hourly_demand_distributed_by_nuts2"]], "endemo2.model_instance.model.households": [[7, 0, 0, "-", "hh_subsectors"], [7, 0, 0, "-", "household_sector"]], "endemo2.model_instance.model.households.hh_subsectors": [[7, 1, 1, "", "HotWater"], [7, 1, 1, "", "HouseholdsSubsector"], [7, 1, 1, "", "SpaceHeating"]], "endemo2.model_instance.model.households.hh_subsectors.HotWater": [[7, 3, 1, "", "calculate_demand"]], "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector": [[7, 3, 1, "", "calculate_demand"], [7, 3, 1, "", "calculate_demand_distributed_by_nuts2"], [7, 3, 1, "", "calculate_hourly_demand_efh"], [7, 3, 1, "", "calculate_hourly_demand_mfh"]], "endemo2.model_instance.model.households.hh_subsectors.SpaceHeating": [[7, 3, 1, "", "calculate_demand"]], "endemo2.model_instance.model.households.household_sector": [[7, 1, 1, "", "Households"]], "endemo2.model_instance.model.households.household_sector.Households": [[7, 3, 1, "", "calculate_demand"], [7, 3, 1, "", "calculate_demand_distributed_by_nuts2"], [7, 3, 1, "", "calculate_hourly_demand_efh"], [7, 3, 1, "", "calculate_hourly_demand_efh_distributed_by_nuts2"], [7, 3, 1, "", "calculate_hourly_demand_mfh"], [7, 3, 1, "", "calculate_hourly_demand_mfh_distributed_by_nuts2"]], "endemo2.model_instance.model.industry": [[8, 0, 0, "-", "industry_sector"], [8, 0, 0, "-", "products"]], "endemo2.model_instance.model.industry.industry_sector": [[8, 1, 1, "", "Industry"]], "endemo2.model_instance.model.industry.industry_sector.Industry": [[8, 3, 1, "", "calculate_forecasted_demand"], [8, 3, 1, "", "calculate_forecasted_demand_distributed_by_nuts2"], [8, 3, 1, "", "calculate_forecasted_hourly_demand"], [8, 3, 1, "", "calculate_forecasted_hourly_demand_distributed_by_nuts2"], [8, 3, 1, "", "calculate_rest_demand_distributed_by_nuts2"], [8, 3, 1, "", "calculate_rest_sector_demand"], [8, 3, 1, "", "calculate_rest_sector_hourly_demand"], [8, 3, 1, "", "calculate_rest_sector_hourly_demand_distributed_by_nuts2"], [8, 3, 1, "", "calculate_total_demand"], [8, 3, 1, "", "calculate_total_demand_distributed_by_nuts2"], [8, 3, 1, "", "calculate_total_hourly_demand"], [8, 3, 1, "", "calculate_total_hourly_demand_distributes_by_nuts2"], [8, 3, 1, "", "get_product"]], "endemo2.model_instance.model.industry.products": [[8, 1, 1, "", "Product"]], "endemo2.model_instance.model.industry.products.Product": [[8, 3, 1, "", "calculate_demand"], [8, 3, 1, "", "calculate_hourly_demand"], [8, 3, 1, "", "calculate_hourly_demand_distributed_by_nuts2"], [8, 3, 1, "", "get_demand_distributed_by_nuts2"]], "endemo2.model_instance.model.sector": [[5, 1, 1, "", "Sector"]], "endemo2.model_instance.model.sector.Sector": [[5, 3, 1, "", "calculate_demand"], [5, 3, 1, "", "calculate_demand_distributed_by_nuts2"]], "endemo2.model_instance.model.transport": [[9, 0, 0, "-", "transport_sector"]], "endemo2.model_instance.model.transport.transport_sector": [[9, 1, 1, "", "Transport"]], "endemo2.model_instance.model.transport.transport_sector.Transport": [[9, 3, 1, "", "calculate_demand"], [9, 3, 1, "", "calculate_demand_distributed_by_nuts2"], [9, 3, 1, "", "calculate_demand_for_traffic_type"], [9, 3, 1, "", "calculate_demand_for_traffic_type_distributed_by_nuts2"], [9, 3, 1, "", "calculate_subsector_demand"], [9, 3, 1, "", "calculate_subsector_demand_distributed_by_nuts2"]], "endemo2.output": [[10, 0, 0, "-", "output_instance"], [10, 0, 0, "-", "output_preprocessing"], [10, 0, 0, "-", "output_utility"], [10, 0, 0, "-", "output_utility_visual"]], "endemo2.output.output_instance": [[10, 4, 1, "", "generate_instance_output"], [10, 4, 1, "", "output_cts_demand_country"], [10, 4, 1, "", "output_cts_demand_hourly_country"], [10, 4, 1, "", "output_cts_demand_hourly_nuts2"], [10, 4, 1, "", "output_cts_demand_nuts2"], [10, 4, 1, "", "output_cts_employee_number"], [10, 4, 1, "", "output_cts_specific_consumption"], [10, 4, 1, "", "output_gen_gdp"], [10, 4, 1, "", "output_gen_population_forecast"], [10, 4, 1, "", "output_gen_population_forecast_details"], [10, 4, 1, "", "output_hh_characteristics"], [10, 4, 1, "", "output_hh_demand_country"], [10, 4, 1, "", "output_hh_demand_hourly_country"], [10, 4, 1, "", "output_hh_demand_hourly_nuts2"], [10, 4, 1, "", "output_hh_demand_nuts2"], [10, 4, 1, "", "output_hh_subsectors_demand"], [10, 4, 1, "", "output_ind_demand_country"], [10, 4, 1, "", "output_ind_demand_hourly_country"], [10, 4, 1, "", "output_ind_demand_hourly_nuts2"], [10, 4, 1, "", "output_ind_demand_nuts2"], [10, 4, 1, "", "output_ind_product_amount"], [10, 4, 1, "", "output_ind_specific_consumption"], [10, 4, 1, "", "output_tra_demand_hourly_country"], [10, 4, 1, "", "output_tra_demand_hourly_nuts2"], [10, 4, 1, "", "output_tra_energy_demand_country"], [10, 4, 1, "", "output_tra_energy_demand_detail"], [10, 4, 1, "", "output_tra_energy_demand_nuts2"], [10, 4, 1, "", "output_tra_kilometers"], [10, 4, 1, "", "output_tra_kilometers_nuts2"], [10, 4, 1, "", "output_tra_modal_split"], [10, 4, 1, "", "output_tra_pkm_tkm_hourly_country"], [10, 4, 1, "", "output_tra_pkm_tkm_hourly_nuts2"], [10, 4, 1, "", "output_tra_production_volume"]], "endemo2.output.output_preprocessing": [[10, 4, 1, "", "generate_preprocessing_output"], [10, 4, 1, "", "output_cts_coef_employee_number"], [10, 4, 1, "", "output_cts_employee_number_visual_country"], [10, 4, 1, "", "output_cts_employee_number_visual_nuts2"], [10, 4, 1, "", "output_cts_specific_consumption"], [10, 4, 1, "", "output_cts_specific_consumption_visual"], [10, 4, 1, "", "output_hh_coef_historical_consumption"], [10, 4, 1, "", "output_hh_consumption_visual_country"], [10, 4, 1, "", "output_hh_demand_historical_2018"], [10, 4, 1, "", "output_ind_coef_product_amount"], [10, 4, 1, "", "output_ind_country_group"], [10, 4, 1, "", "output_ind_country_group_visual"], [10, 4, 1, "", "output_ind_product_amount_visual"], [10, 4, 1, "", "output_ind_specific_consumption"], [10, 4, 1, "", "output_ind_specific_consumption_visual"], [10, 4, 1, "", "output_tra_coef_modal_split"], [10, 4, 1, "", "output_tra_modal_split_visual"]], "endemo2.output.output_utility": [[10, 1, 1, "", "FileGenerator"], [10, 4, 1, "", "ensure_directory_exists"], [10, 4, 1, "", "generate_timeseries_output"], [10, 4, 1, "", "get_day_folder_path"], [10, 4, 1, "", "shortcut_coef_output"], [10, 4, 1, "", "shortcut_demand_table"], [10, 4, 1, "", "shortcut_save_timeseries_print"], [10, 4, 1, "", "shortcut_sc_output"]], "endemo2.output.output_utility.FileGenerator": [[10, 3, 1, "", "add_complete_column"], [10, 3, 1, "", "add_entry"], [10, 3, 1, "", "end_sheet"], [10, 3, 1, "", "get_day_directory"], [10, 3, 1, "", "print_all_entries"], [10, 3, 1, "", "print_length_of_all_entries"], [10, 3, 1, "", "save_file"], [10, 3, 1, "", "start_sheet"]], "endemo2.output.output_utility_visual": [[10, 4, 1, "", "plot_coef_in_range"], [10, 4, 1, "", "plot_coef_with_method_in_range"], [10, 4, 1, "", "plot_historical_data"], [10, 4, 1, "", "plot_series_detailed"], [10, 4, 1, "", "plot_series_simple"], [10, 4, 1, "", "save_multiple_series_plot"], [10, 4, 1, "", "save_plot"], [10, 4, 1, "", "save_series_plot"]], "endemo2.preprocessing": [[11, 0, 0, "-", "preproccessing_step_two"], [11, 0, 0, "-", "preprocessing_step_one"], [11, 0, 0, "-", "preprocessing_utility"], [11, 0, 0, "-", "preprocessor"]], "endemo2.preprocessing.preproccessing_step_two": [[11, 1, 1, "", "CountryGroup"], [11, 1, 1, "", "CountryGroupJoined"], [11, 1, 1, "", "CountryGroupJoinedDiversified"], [11, 1, 1, "", "GroupManager"]], "endemo2.preprocessing.preproccessing_step_two.CountryGroup": [[11, 3, 1, "", "get_countries_in_group"]], "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoined": [[11, 3, 1, "", "get_all_historical_data"], [11, 3, 1, "", "get_coef"]], "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoinedDiversified": [[11, 3, 1, "", "get_all_historical_data"], [11, 3, 1, "", "get_coef_for_country"]], "endemo2.preprocessing.preproccessing_step_two.GroupManager": [[11, 3, 1, "", "get_coef_for_country_and_product"], [11, 3, 1, "", "is_in_separate_group"]], "endemo2.preprocessing.preprocessing_step_one": [[11, 1, 1, "", "CountryPreprocessed"], [11, 1, 1, "", "CtsPreprocessed"], [11, 1, 1, "", "GDPPreprocessed"], [11, 1, 1, "", "HouseholdsPreprocessed"], [11, 1, 1, "", "IndustryPreprocessed"], [11, 1, 1, "", "NUTS2Preprocessed"], [11, 1, 1, "", "PopulationPreprocessed"], [11, 1, 1, "", "ProductPreprocessed"], [11, 1, 1, "", "SpecificConsumptionPreprocessed"], [11, 1, 1, "", "TransportPreprocessed"]], "endemo2.preprocessing.preprocessing_step_one.CtsPreprocessed": [[11, 3, 1, "", "preprocess_specific_consumption"]], "endemo2.preprocessing.preprocessing_utility": [[11, 4, 1, "", "energy_carrier_to_energy_consumption"]], "endemo2.preprocessing.preprocessor": [[11, 1, 1, "", "Preprocessor"]], "endemo2.utility": [[0, 4, 1, "", "apply_all_regressions"], [0, 4, 1, "", "convert_table_to_filtered_data_series_per_country"], [0, 4, 1, "", "cut_after_x"], [0, 4, 1, "", "exp_change"], [0, 4, 1, "", "exponential_interpolation"], [0, 4, 1, "", "filter_out_nan_and_inf"], [0, 4, 1, "", "find_interval_between_datapoints"], [0, 4, 1, "", "float_lists_to_datapoint_list"], [0, 4, 1, "", "get_series_range"], [0, 4, 1, "", "is_permissible_float"], [0, 4, 1, "", "is_tuple_list_zero"], [0, 4, 1, "", "is_zero"], [0, 4, 1, "", "lin_prediction"], [0, 4, 1, "", "linear_regression"], [0, 4, 1, "", "log_prediction"], [0, 4, 1, "", "logarithmic_regression"], [0, 4, 1, "", "map_data_y"], [0, 4, 1, "", "multiply_demand_dictionary_with_scalar"], [0, 4, 1, "", "multiply_dictionary_with_demand"], [0, 4, 1, "", "multiply_dictionary_with_scalar"], [0, 4, 1, "", "plot_timeseries_regression"], [0, 4, 1, "", "quadr_prediction"], [0, 4, 1, "", "quadratic_regression"], [0, 4, 1, "", "quadratic_regression_delta"], [0, 4, 1, "", "str_dict"], [0, 4, 1, "", "zip_data_on_x"], [0, 4, 1, "", "zip_data_on_x_and_map"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 12, "endemo": [0, 12], "": 12, "document": 12, "how": 12, "maintain": 12, "code": 12, "base": 12, "indic": 12, "tabl": 12, "endemo2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": [0, 3, 5], "submodul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "util": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "data_structur": 1, "contain": 1, "conversions_str": 1, "conversions_unit": 1, "enumer": 1, "nuts_tre": 1, "prediction_model": 1, "input_and_set": 2, "control_paramet": 2, "input_ct": 2, "input_gener": 2, "input_household": 2, "input_industri": 2, "input_manag": 2, "input_util": 2, "model_inst": [3, 4, 5, 6, 7, 8, 9], "instance_filt": 4, "cts_instance_filt": 4, "general_instance_filt": 4, "households_instance_filt": 4, "industry_instance_filt": 4, "model": [5, 6, 7, 8, 9], "countri": 5, "sector": 5, "ct": 6, "cts_sector": 6, "cts_subsector": 6, "household": 7, "hh_subsector": 7, "household_sector": 7, "industri": 8, "industry_sector": 8, "product": 8, "transport": 9, "transport_sector": 9, "output": 10, "output_inst": 10, "output_preprocess": 10, "output_util": 10, "output_utility_visu": 10, "preprocess": 11, "preproccessing_step_two": 11, "preprocessing_step_on": 11, "preprocessing_util": 11, "preprocessor": 11, "main": [], "input_transport": 2, "transport_instance_filt": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to Endemo\u2019s documentation!": [[12, "welcome-to-endemo-s-documentation"]], "How to maintain the code base": [[12, "how-to-maintain-the-code-base"]], "How to maintain the documentation": [[12, "how-to-maintain-the-documentation"]], "Contents:": [[12, null]], "Indices and tables": [[12, "indices-and-tables"]], "endemo2": [[13, "endemo2"]], "endemo2 package": [[0, "endemo2-package"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"], [5, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "endemo2.endemo module": [[0, "module-endemo2.endemo"]], "endemo2.utility module": [[0, "module-endemo2.utility"]], "Module contents": [[0, "module-endemo2"], [1, "module-endemo2.data_structures"], [2, "module-endemo2.input_and_settings"], [3, "module-endemo2.model_instance"], [4, "module-endemo2.model_instance.instance_filter"], [5, "module-endemo2.model_instance.model"], [6, "module-endemo2.model_instance.model.cts"], [7, "module-endemo2.model_instance.model.households"], [8, "module-endemo2.model_instance.model.industry"], [9, "module-endemo2.model_instance.model.transport"], [10, "module-endemo2.output"], [11, "module-endemo2.preprocessing"]], "endemo2.data_structures package": [[1, "endemo2-data-structures-package"]], "endemo2.data_structures.containers module": [[1, "module-endemo2.data_structures.containers"]], "endemo2.data_structures.conversions_string module": [[1, "module-endemo2.data_structures.conversions_string"]], "endemo2.data_structures.conversions_unit module": [[1, "module-endemo2.data_structures.conversions_unit"]], "endemo2.data_structures.enumerations module": [[1, "module-endemo2.data_structures.enumerations"]], "endemo2.data_structures.nuts_tree module": [[1, "module-endemo2.data_structures.nuts_tree"]], "endemo2.data_structures.prediction_models module": [[1, "module-endemo2.data_structures.prediction_models"]], "endemo2.input_and_settings package": [[2, "endemo2-input-and-settings-package"]], "endemo2.input_and_settings.control_parameters module": [[2, "module-endemo2.input_and_settings.control_parameters"]], "endemo2.input_and_settings.input_cts module": [[2, "module-endemo2.input_and_settings.input_cts"]], "endemo2.input_and_settings.input_general module": [[2, "module-endemo2.input_and_settings.input_general"]], "endemo2.input_and_settings.input_households module": [[2, "module-endemo2.input_and_settings.input_households"]], "endemo2.input_and_settings.input_industry module": [[2, "module-endemo2.input_and_settings.input_industry"]], "endemo2.input_and_settings.input_manager module": [[2, "module-endemo2.input_and_settings.input_manager"]], "endemo2.input_and_settings.input_transport module": [[2, "module-endemo2.input_and_settings.input_transport"]], "endemo2.input_and_settings.input_utility module": [[2, "module-endemo2.input_and_settings.input_utility"]], "endemo2.model_instance package": [[3, "endemo2-model-instance-package"]], "endemo2.model_instance.instance_filter package": [[4, "endemo2-model-instance-instance-filter-package"]], "endemo2.model_instance.instance_filter.cts_instance_filter module": [[4, "module-endemo2.model_instance.instance_filter.cts_instance_filter"]], "endemo2.model_instance.instance_filter.general_instance_filter module": [[4, "module-endemo2.model_instance.instance_filter.general_instance_filter"]], "endemo2.model_instance.instance_filter.households_instance_filter module": [[4, "module-endemo2.model_instance.instance_filter.households_instance_filter"]], "endemo2.model_instance.instance_filter.industry_instance_filter module": [[4, "module-endemo2.model_instance.instance_filter.industry_instance_filter"]], "endemo2.model_instance.instance_filter.transport_instance_filter module": [[4, "module-endemo2.model_instance.instance_filter.transport_instance_filter"]], "endemo2.model_instance.model package": [[5, "endemo2-model-instance-model-package"]], "endemo2.model_instance.model.country module": [[5, "module-endemo2.model_instance.model.country"]], "endemo2.model_instance.model.sector module": [[5, "module-endemo2.model_instance.model.sector"]], "endemo2.model_instance.model.cts package": [[6, "endemo2-model-instance-model-cts-package"]], "endemo2.model_instance.model.cts.cts_sector module": [[6, "module-endemo2.model_instance.model.cts.cts_sector"]], "endemo2.model_instance.model.cts.cts_subsector module": [[6, "module-endemo2.model_instance.model.cts.cts_subsector"]], "endemo2.model_instance.model.households package": [[7, "endemo2-model-instance-model-households-package"]], "endemo2.model_instance.model.households.hh_subsectors module": [[7, "module-endemo2.model_instance.model.households.hh_subsectors"]], "endemo2.model_instance.model.households.household_sector module": [[7, "module-endemo2.model_instance.model.households.household_sector"]], "endemo2.model_instance.model.industry package": [[8, "endemo2-model-instance-model-industry-package"]], "endemo2.model_instance.model.industry.industry_sector module": [[8, "module-endemo2.model_instance.model.industry.industry_sector"]], "endemo2.model_instance.model.industry.products module": [[8, "module-endemo2.model_instance.model.industry.products"]], "endemo2.model_instance.model.transport package": [[9, "endemo2-model-instance-model-transport-package"]], "endemo2.model_instance.model.transport.transport_sector module": [[9, "module-endemo2.model_instance.model.transport.transport_sector"]], "endemo2.output package": [[10, "endemo2-output-package"]], "endemo2.output.output_instance module": [[10, "module-endemo2.output.output_instance"]], "endemo2.output.output_preprocessing module": [[10, "module-endemo2.output.output_preprocessing"]], "endemo2.output.output_utility module": [[10, "module-endemo2.output.output_utility"]], "endemo2.output.output_utility_visual module": [[10, "module-endemo2.output.output_utility_visual"]], "endemo2.preprocessing package": [[11, "endemo2-preprocessing-package"]], "endemo2.preprocessing.preproccessing_step_two module": [[11, "module-endemo2.preprocessing.preproccessing_step_two"]], "endemo2.preprocessing.preprocessing_step_one module": [[11, "module-endemo2.preprocessing.preprocessing_step_one"]], "endemo2.preprocessing.preprocessing_utility module": [[11, "module-endemo2.preprocessing.preprocessing_utility"]], "endemo2.preprocessing.preprocessor module": [[11, "module-endemo2.preprocessing.preprocessor"]]}, "indexentries": {"endemo (class in endemo2.endemo)": [[0, "endemo2.endemo.Endemo"]], "apply_all_regressions() (in module endemo2.utility)": [[0, "endemo2.utility.apply_all_regressions"]], "convert_table_to_filtered_data_series_per_country() (in module endemo2.utility)": [[0, "endemo2.utility.convert_table_to_filtered_data_series_per_country"]], "create_instance() (endemo method)": [[0, "endemo2.endemo.Endemo.create_instance"]], "cut_after_x() (in module endemo2.utility)": [[0, "endemo2.utility.cut_after_x"]], "endemo2": [[0, "module-endemo2"]], "endemo2.endemo": [[0, "module-endemo2.endemo"]], "endemo2.utility": [[0, "module-endemo2.utility"]], "execute_with_preprocessing() (endemo method)": [[0, "endemo2.endemo.Endemo.execute_with_preprocessing"]], "execute_without_preprocessing() (endemo method)": [[0, "endemo2.endemo.Endemo.execute_without_preprocessing"]], "exp_change() (in module endemo2.utility)": [[0, "endemo2.utility.exp_change"]], "exponential_interpolation() (in module endemo2.utility)": [[0, "endemo2.utility.exponential_interpolation"]], "filter_out_nan_and_inf() (in module endemo2.utility)": [[0, "endemo2.utility.filter_out_nan_and_inf"]], "find_interval_between_datapoints() (in module endemo2.utility)": [[0, "endemo2.utility.find_interval_between_datapoints"]], "float_lists_to_datapoint_list() (in module endemo2.utility)": [[0, "endemo2.utility.float_lists_to_datapoint_list"]], "get_series_range() (in module endemo2.utility)": [[0, "endemo2.utility.get_series_range"]], "is_permissible_float() (in module endemo2.utility)": [[0, "endemo2.utility.is_permissible_float"]], "is_tuple_list_zero() (in module endemo2.utility)": [[0, "endemo2.utility.is_tuple_list_zero"]], "is_zero() (in module endemo2.utility)": [[0, "endemo2.utility.is_zero"]], "lin_prediction() (in module endemo2.utility)": [[0, "endemo2.utility.lin_prediction"]], "linear_regression() (in module endemo2.utility)": [[0, "endemo2.utility.linear_regression"]], "log_prediction() (in module endemo2.utility)": [[0, "endemo2.utility.log_prediction"]], "logarithmic_regression() (in module endemo2.utility)": [[0, "endemo2.utility.logarithmic_regression"]], "map_data_y() (in module endemo2.utility)": [[0, "endemo2.utility.map_data_y"]], "module": [[0, "module-endemo2"], [0, "module-endemo2.endemo"], [0, "module-endemo2.utility"], [1, "module-endemo2.data_structures"], [1, "module-endemo2.data_structures.containers"], [1, "module-endemo2.data_structures.conversions_string"], [1, "module-endemo2.data_structures.conversions_unit"], [1, "module-endemo2.data_structures.enumerations"], [1, "module-endemo2.data_structures.nuts_tree"], [1, "module-endemo2.data_structures.prediction_models"], [2, "module-endemo2.input_and_settings"], [2, "module-endemo2.input_and_settings.control_parameters"], [2, "module-endemo2.input_and_settings.input_cts"], [2, "module-endemo2.input_and_settings.input_general"], [2, "module-endemo2.input_and_settings.input_households"], [2, "module-endemo2.input_and_settings.input_industry"], [2, "module-endemo2.input_and_settings.input_manager"], [2, "module-endemo2.input_and_settings.input_transport"], [2, "module-endemo2.input_and_settings.input_utility"], [3, "module-endemo2.model_instance"], [4, "module-endemo2.model_instance.instance_filter"], [4, "module-endemo2.model_instance.instance_filter.cts_instance_filter"], [4, "module-endemo2.model_instance.instance_filter.general_instance_filter"], [4, "module-endemo2.model_instance.instance_filter.households_instance_filter"], [4, "module-endemo2.model_instance.instance_filter.industry_instance_filter"], [4, "module-endemo2.model_instance.instance_filter.transport_instance_filter"], [5, "module-endemo2.model_instance.model"], [5, "module-endemo2.model_instance.model.country"], [5, "module-endemo2.model_instance.model.sector"], [6, "module-endemo2.model_instance.model.cts"], [6, "module-endemo2.model_instance.model.cts.cts_sector"], [6, "module-endemo2.model_instance.model.cts.cts_subsector"], [7, "module-endemo2.model_instance.model.households"], [7, "module-endemo2.model_instance.model.households.hh_subsectors"], [7, "module-endemo2.model_instance.model.households.household_sector"], [8, "module-endemo2.model_instance.model.industry"], [8, "module-endemo2.model_instance.model.industry.industry_sector"], [8, "module-endemo2.model_instance.model.industry.products"], [9, "module-endemo2.model_instance.model.transport"], [9, "module-endemo2.model_instance.model.transport.transport_sector"], [10, "module-endemo2.output"], [10, "module-endemo2.output.output_instance"], [10, "module-endemo2.output.output_preprocessing"], [10, "module-endemo2.output.output_utility"], [10, "module-endemo2.output.output_utility_visual"], [11, "module-endemo2.preprocessing"], [11, "module-endemo2.preprocessing.preproccessing_step_two"], [11, "module-endemo2.preprocessing.preprocessing_step_one"], [11, "module-endemo2.preprocessing.preprocessing_utility"], [11, "module-endemo2.preprocessing.preprocessor"]], "multiply_demand_dictionary_with_scalar() (in module endemo2.utility)": [[0, "endemo2.utility.multiply_demand_dictionary_with_scalar"]], "multiply_dictionary_with_demand() (in module endemo2.utility)": [[0, "endemo2.utility.multiply_dictionary_with_demand"]], "multiply_dictionary_with_scalar() (in module endemo2.utility)": [[0, "endemo2.utility.multiply_dictionary_with_scalar"]], "plot_timeseries_regression() (in module endemo2.utility)": [[0, "endemo2.utility.plot_timeseries_regression"]], "quadr_prediction() (in module endemo2.utility)": [[0, "endemo2.utility.quadr_prediction"]], "quadratic_regression() (in module endemo2.utility)": [[0, "endemo2.utility.quadratic_regression"]], "quadratic_regression_delta() (in module endemo2.utility)": [[0, "endemo2.utility.quadratic_regression_delta"]], "str_dict() (in module endemo2.utility)": [[0, "endemo2.utility.str_dict"]], "update_settings() (endemo method)": [[0, "endemo2.endemo.Endemo.update_settings"]], "write_all_output() (endemo method)": [[0, "endemo2.endemo.Endemo.write_all_output"]], "write_model_output() (endemo method)": [[0, "endemo2.endemo.Endemo.write_model_output"]], "write_preprocessing_output() (endemo method)": [[0, "endemo2.endemo.Endemo.write_preprocessing_output"]], "zip_data_on_x() (in module endemo2.utility)": [[0, "endemo2.utility.zip_data_on_x"]], "zip_data_on_x_and_map() (in module endemo2.utility)": [[0, "endemo2.utility.zip_data_on_x_and_map"]], "average_value (startpoint attribute)": [[1, "endemo2.data_structures.enumerations.StartPoint.AVERAGE_VALUE"]], "both (traffictype attribute)": [[1, "endemo2.data_structures.enumerations.TrafficType.BOTH"]], "billion (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.Billion"]], "ca (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.CA"]], "chemicals_and_petrochemicals (subsectorgroup attribute)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup.CHEMICALS_AND_PETROCHEMICALS"]], "commercial_trade_services (sectoridentifier attribute)": [[1, "endemo2.data_structures.enumerations.SectorIdentifier.COMMERCIAL_TRADE_SERVICES"]], "const_last (scforecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ScForecastMethod.CONST_LAST"]], "const_mean (scforecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ScForecastMethod.CONST_MEAN"]], "cooking (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.COOKING"]], "coef (class in endemo2.data_structures.prediction_models)": [[1, "endemo2.data_structures.prediction_models.Coef"]], "datapoint (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.Datapoint"]], "demand (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.Demand"]], "demandtype (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.DemandType"]], "eh (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.EH"]], "electricity (demandtype attribute)": [[1, "endemo2.data_structures.enumerations.DemandType.ELECTRICITY"]], "empty (grouptype attribute)": [[1, "endemo2.data_structures.enumerations.GroupType.EMPTY"]], "exponential (forecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ForecastMethod.EXPONENTIAL"]], "food_and_tobacco (subsectorgroup attribute)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup.FOOD_AND_TOBACCO"]], "freight (traffictype attribute)": [[1, "endemo2.data_structures.enumerations.TrafficType.FREIGHT"]], "fuel (demandtype attribute)": [[1, "endemo2.data_structures.enumerations.DemandType.FUEL"]], "forecastmethod (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.ForecastMethod"]], "gj (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.GJ"]], "gwh (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.GWh"]], "grouptype (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.GroupType"]], "heat (demandtype attribute)": [[1, "endemo2.data_structures.enumerations.DemandType.HEAT"]], "historical_constant (transportmodalsplitmethod attribute)": [[1, "endemo2.data_structures.enumerations.TransportModalSplitMethod.HISTORICAL_CONSTANT"]], "historical_time_trend (transportmodalsplitmethod attribute)": [[1, "endemo2.data_structures.enumerations.TransportModalSplitMethod.HISTORICAL_TIME_TREND"]], "households (sectoridentifier attribute)": [[1, "endemo2.data_structures.enumerations.SectorIdentifier.HOUSEHOLDS"]], "hydrogen (demandtype attribute)": [[1, "endemo2.data_structures.enumerations.DemandType.HYDROGEN"]], "heat (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.Heat"]], "hisprog (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.HisProg"]], "householdssubsectorid (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId"]], "industry (sectoridentifier attribute)": [[1, "endemo2.data_structures.enumerations.SectorIdentifier.INDUSTRY"]], "iron_and_steel (subsectorgroup attribute)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup.IRON_AND_STEEL"]], "interval (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.Interval"]], "intervalforecast (class in endemo2.data_structures.prediction_models)": [[1, "endemo2.data_structures.prediction_models.IntervalForecast"]], "joined (grouptype attribute)": [[1, "endemo2.data_structures.enumerations.GroupType.JOINED"]], "joined_diversified (grouptype attribute)": [[1, "endemo2.data_structures.enumerations.GroupType.JOINED_DIVERSIFIED"]], "last_available (startpoint attribute)": [[1, "endemo2.data_structures.enumerations.StartPoint.LAST_AVAILABLE"]], "lighting_and_appliances (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.LIGHTING_AND_APPLIANCES"]], "linear (forecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ForecastMethod.LINEAR"]], "linear (scforecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ScForecastMethod.LINEAR"]], "logarithmic (forecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ForecastMethod.LOGARITHMIC"]], "logarithmic (scforecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ScForecastMethod.LOGARITHMIC"]], "manual (startpoint attribute)": [[1, "endemo2.data_structures.enumerations.StartPoint.MANUAL"]], "mj (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.MJ"]], "mwh (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.MWh"]], "million (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.Million"]], "non_metalic_minerals (subsectorgroup attribute)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup.NON_METALIC_MINERALS"]], "nutsregion (class in endemo2.data_structures.nuts_tree)": [[1, "endemo2.data_structures.nuts_tree.NutsRegion"]], "nutsregionleaf (class in endemo2.data_structures.nuts_tree)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionLeaf"]], "nutsregionnode (class in endemo2.data_structures.nuts_tree)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode"]], "other (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.OTHER"]], "paper (subsectorgroup attribute)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup.PAPER"]], "person (traffictype attribute)": [[1, "endemo2.data_structures.enumerations.TrafficType.PERSON"]], "pj (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.PJ"]], "quadratic (forecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ForecastMethod.QUADRATIC"]], "quadratic_offset (forecastmethod attribute)": [[1, "endemo2.data_structures.enumerations.ForecastMethod.QUADRATIC_OFFSET"]], "reference (transportfinalenergydemandscenario attribute)": [[1, "endemo2.data_structures.enumerations.TransportFinalEnergyDemandScenario.REFERENCE"]], "rigidtimeseries (class in endemo2.data_structures.prediction_models)": [[1, "endemo2.data_structures.prediction_models.RigidTimeseries"]], "separate (grouptype attribute)": [[1, "endemo2.data_structures.enumerations.GroupType.SEPARATE"]], "space_cooling (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.SPACE_COOLING"]], "space_heating (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.SPACE_HEATING"]], "scforecastmethod (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.ScForecastMethod"]], "sectoridentifier (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.SectorIdentifier"]], "specconsum (class in endemo2.data_structures.containers)": [[1, "endemo2.data_structures.containers.SpecConsum"]], "standard (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.Standard"]], "startpoint (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.StartPoint"]], "subsectorgroup (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.SubsectorGroup"]], "tj (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.TJ"]], "transport (sectoridentifier attribute)": [[1, "endemo2.data_structures.enumerations.SectorIdentifier.TRANSPORT"]], "twh (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.TWh"]], "timeseries (class in endemo2.data_structures.prediction_models)": [[1, "endemo2.data_structures.prediction_models.Timeseries"]], "traffictype (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.TrafficType"]], "transportfinalenergydemandscenario (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.TransportFinalEnergyDemandScenario"]], "transportmodal (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.TransportModal"]], "transportmodalsplitmethod (class in endemo2.data_structures.enumerations)": [[1, "endemo2.data_structures.enumerations.TransportModalSplitMethod"]], "twodseries (class in endemo2.data_structures.prediction_models)": [[1, "endemo2.data_structures.prediction_models.TwoDseries"]], "user_defined (transportfinalenergydemandscenario attribute)": [[1, "endemo2.data_structures.enumerations.TransportFinalEnergyDemandScenario.USER_DEFINED"]], "user_defined (transportmodalsplitmethod attribute)": [[1, "endemo2.data_structures.enumerations.TransportModalSplitMethod.USER_DEFINED"]], "unit (class in endemo2.data_structures.conversions_unit)": [[1, "endemo2.data_structures.conversions_unit.Unit"]], "water_heating (householdssubsectorid attribute)": [[1, "endemo2.data_structures.enumerations.HouseholdsSubsectorId.WATER_HEATING"]], "add() (demand method)": [[1, "endemo2.data_structures.containers.Demand.add"]], "add() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.add"]], "add_leaf_region() (nutsregionnode method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode.add_leaf_region"]], "alpha2 (ca attribute)": [[1, "endemo2.data_structures.containers.CA.alpha2"]], "alpha3 (ca attribute)": [[1, "endemo2.data_structures.containers.CA.alpha3"]], "append_others_data() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.append_others_data"]], "append_others_data() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.append_others_data"]], "bus (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.bus"]], "cap_at_bat() (specconsum method)": [[1, "endemo2.data_structures.containers.SpecConsum.cap_at_bat"]], "car (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.car"]], "convert() (in module endemo2.data_structures.conversions_unit)": [[1, "endemo2.data_structures.conversions_unit.convert"]], "copy_add() (heat method)": [[1, "endemo2.data_structures.containers.Heat.copy_add"]], "copy_multiply() (demand method)": [[1, "endemo2.data_structures.containers.Demand.copy_multiply"]], "copy_multiply() (heat method)": [[1, "endemo2.data_structures.containers.Heat.copy_multiply"]], "copy_multiply_scalar() (heat method)": [[1, "endemo2.data_structures.containers.Heat.copy_multiply_scalar"]], "copy_scale() (demand method)": [[1, "endemo2.data_structures.containers.Demand.copy_scale"]], "divide_by() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.divide_by"]], "electricity (eh attribute)": [[1, "endemo2.data_structures.containers.EH.electricity"]], "end (interval attribute)": [[1, "endemo2.data_structures.containers.Interval.end"]], "endemo2.data_structures": [[1, "module-endemo2.data_structures"]], "endemo2.data_structures.containers": [[1, "module-endemo2.data_structures.containers"]], "endemo2.data_structures.conversions_string": [[1, "module-endemo2.data_structures.conversions_string"]], "endemo2.data_structures.conversions_unit": [[1, "module-endemo2.data_structures.conversions_unit"]], "endemo2.data_structures.enumerations": [[1, "module-endemo2.data_structures.enumerations"]], "endemo2.data_structures.nuts_tree": [[1, "module-endemo2.data_structures.nuts_tree"]], "endemo2.data_structures.prediction_models": [[1, "module-endemo2.data_structures.prediction_models"]], "fill_empty_years_with_value() (timeseries class method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.fill_empty_years_with_value"]], "fill_own_empty_years_with_value() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.fill_own_empty_years_with_value"]], "flight (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.flight"]], "generate_coef() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.generate_coef"]], "german_name (ca attribute)": [[1, "endemo2.data_structures.containers.CA.german_name"]], "get() (demand method)": [[1, "endemo2.data_structures.containers.Demand.get"]], "get() (nutsregionleaf method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionLeaf.get"]], "get_all_leaf_nodes() (nutsregionnode method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode.get_all_leaf_nodes"]], "get_coef() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.get_coef"]], "get_conversion_scalar() (in module endemo2.data_structures.conversions_unit)": [[1, "endemo2.data_structures.conversions_unit.get_conversion_scalar"]], "get_data() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.get_data"]], "get_exp() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_exp"]], "get_exp_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_exp_y"]], "get_forecast() (intervalforecast method)": [[1, "endemo2.data_structures.prediction_models.IntervalForecast.get_forecast"]], "get_function_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_function_y"]], "get_last_available_data_entry_or_zero() (rigidtimeseries method)": [[1, "endemo2.data_structures.prediction_models.RigidTimeseries.get_last_available_data_entry_or_zero"]], "get_last_data_entry() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.get_last_data_entry"]], "get_lin() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_lin"]], "get_lin_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_lin_y"]], "get_log() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_log"]], "get_log_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_log_y"]], "get_mean_y() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.get_mean_y"]], "get_method() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_method"]], "get_nodes_dfs() (nutsregionnode method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode.get_nodes_dfs"]], "get_offset() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_offset"]], "get_quadr() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_quadr"]], "get_quadr_offset_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_quadr_offset_y"]], "get_quadr_y() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.get_quadr_y"]], "get_region_name() (nutsregionnode method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode.get_region_name"]], "get_specific_node() (nutsregionnode method)": [[1, "endemo2.data_structures.nuts_tree.NutsRegionNode.get_specific_node"]], "get_sum() (demand method)": [[1, "endemo2.data_structures.containers.Demand.get_sum"]], "get_sum() (heat method)": [[1, "endemo2.data_structures.containers.Heat.get_sum"]], "get_value_at_year() (rigidtimeseries method)": [[1, "endemo2.data_structures.prediction_models.RigidTimeseries.get_value_at_year"]], "get_value_at_year() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.get_value_at_year"]], "get_value_at_year_else_zero() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.get_value_at_year_else_zero"]], "heat (eh attribute)": [[1, "endemo2.data_structures.containers.EH.heat"]], "historical (hisprog attribute)": [[1, "endemo2.data_structures.containers.HisProg.historical"]], "is_empty() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.is_empty"]], "is_zero() (twodseries method)": [[1, "endemo2.data_structures.prediction_models.TwoDseries.is_zero"]], "kwh (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.kWh"]], "kilo (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.kilo"]], "liter (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.liter"]], "m3 (unit attribute)": [[1, "endemo2.data_structures.conversions_unit.Unit.m3"]], "map_two_timeseries() (timeseries class method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.map_two_timeseries"]], "map_y() (timeseries class method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.map_y"]], "merge_two_timeseries() (timeseries class method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.merge_two_timeseries"]], "mutable_add() (heat method)": [[1, "endemo2.data_structures.containers.Heat.mutable_add"]], "mutable_multiply_scalar() (heat method)": [[1, "endemo2.data_structures.containers.Heat.mutable_multiply_scalar"]], "mutable_sub() (heat method)": [[1, "endemo2.data_structures.containers.Heat.mutable_sub"]], "prognosis (hisprog attribute)": [[1, "endemo2.data_structures.containers.HisProg.prognosis"]], "rail (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.rail"]], "road (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.road"]], "road_rail (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.road_rail"]], "road_rail_ship (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.road_rail_ship"]], "scale() (demand method)": [[1, "endemo2.data_structures.containers.Demand.scale"]], "scale() (specconsum method)": [[1, "endemo2.data_structures.containers.SpecConsum.scale"]], "scale() (timeseries method)": [[1, "endemo2.data_structures.prediction_models.Timeseries.scale"]], "set() (demand method)": [[1, "endemo2.data_structures.containers.Demand.set"]], "set_exp() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_exp"]], "set_exp_growth_rate() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_exp_growth_rate"]], "set_exp_start_point() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_exp_start_point"]], "set_lin() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_lin"]], "set_log() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_log"]], "set_method() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_method"]], "set_offset() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_offset"]], "set_quadr() (coef method)": [[1, "endemo2.data_structures.prediction_models.Coef.set_quadr"]], "ship (transportmodal attribute)": [[1, "endemo2.data_structures.enumerations.TransportModal.ship"]], "start (interval attribute)": [[1, "endemo2.data_structures.containers.Interval.start"]], "x (datapoint attribute)": [[1, "endemo2.data_structures.containers.Datapoint.x"]], "y (datapoint attribute)": [[1, "endemo2.data_structures.containers.Datapoint.y"]], "abbreviations (class in endemo2.input_and_settings.input_general)": [[2, "endemo2.input_and_settings.input_general.Abbreviations"]], "controlparameters (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.ControlParameters"]], "ctsinput (class in endemo2.input_and_settings.input_cts)": [[2, "endemo2.input_and_settings.input_cts.CtsInput"]], "ctssettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.CtsSettings"]], "filereadinghelper (class in endemo2.input_and_settings.input_utility)": [[2, "endemo2.input_and_settings.input_utility.FileReadingHelper"]], "generalinput (class in endemo2.input_and_settings.input_general)": [[2, "endemo2.input_and_settings.input_general.GeneralInput"]], "generalsettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.GeneralSettings"]], "householdsettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.HouseholdSettings"]], "householdsinput (class in endemo2.input_and_settings.input_households)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput"]], "industryinput (class in endemo2.input_and_settings.input_industry)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput"]], "industrysettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.IndustrySettings"]], "inputmanager (class in endemo2.input_and_settings.input_manager)": [[2, "endemo2.input_and_settings.input_manager.InputManager"]], "populationinput (class in endemo2.input_and_settings.input_general)": [[2, "endemo2.input_and_settings.input_general.PopulationInput"]], "productinput (class in endemo2.input_and_settings.input_industry)": [[2, "endemo2.input_and_settings.input_industry.ProductInput"]], "productsettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.ProductSettings"]], "restsectorinput (class in endemo2.input_and_settings.input_industry)": [[2, "endemo2.input_and_settings.input_industry.RestSectorInput"]], "transportinput (class in endemo2.input_and_settings.input_transport)": [[2, "endemo2.input_and_settings.input_transport.TransportInput"]], "transportsettings (class in endemo2.input_and_settings.control_parameters)": [[2, "endemo2.input_and_settings.control_parameters.TransportSettings"]], "active (productsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.ProductSettings.active"]], "ctrl_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.ctrl_path"]], "cts_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.cts_path"]], "dict_alpha2_en_map (abbreviations attribute)": [[2, "endemo2.input_and_settings.input_general.Abbreviations.dict_alpha2_en_map"]], "dict_de_en_map (abbreviations attribute)": [[2, "endemo2.input_and_settings.input_general.Abbreviations.dict_de_en_map"]], "dict_en_alpha2_map (abbreviations attribute)": [[2, "endemo2.input_and_settings.input_general.Abbreviations.dict_en_alpha2_map"]], "efficiency_improvement (productsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.ProductSettings.efficiency_improvement"]], "endemo2.input_and_settings": [[2, "module-endemo2.input_and_settings"]], "endemo2.input_and_settings.control_parameters": [[2, "module-endemo2.input_and_settings.control_parameters"]], "endemo2.input_and_settings.input_cts": [[2, "module-endemo2.input_and_settings.input_cts"]], "endemo2.input_and_settings.input_general": [[2, "module-endemo2.input_and_settings.input_general"]], "endemo2.input_and_settings.input_households": [[2, "module-endemo2.input_and_settings.input_households"]], "endemo2.input_and_settings.input_industry": [[2, "module-endemo2.input_and_settings.input_industry"]], "endemo2.input_and_settings.input_manager": [[2, "module-endemo2.input_and_settings.input_manager"]], "endemo2.input_and_settings.input_transport": [[2, "module-endemo2.input_and_settings.input_transport"]], "endemo2.input_and_settings.input_utility": [[2, "module-endemo2.input_and_settings.input_utility"]], "forecast_map (industrysettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.IndustrySettings.forecast_map"]], "general_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.general_path"]], "get() (filereadinghelper method)": [[2, "endemo2.input_and_settings.input_utility.FileReadingHelper.get"]], "get_active_sectors() (generalsettings method)": [[2, "endemo2.input_and_settings.control_parameters.GeneralSettings.get_active_sectors"]], "get_parameter() (generalsettings method)": [[2, "endemo2.input_and_settings.control_parameters.GeneralSettings.get_parameter"]], "hh_energy_carrier_unit_conversion (householdsinput attribute)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.hh_energy_carrier_unit_conversion"]], "hh_his_sheets_skip_rows (householdsinput attribute)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.hh_his_sheets_skip_rows"]], "hh_input_sheet_names (householdsinput attribute)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.hh_input_sheet_names"]], "hh_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.hh_path"]], "hw_read_hot_water_input() (householdsinput method)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.hw_read_hot_water_input"]], "industry_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.industry_path"]], "input_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.input_path"]], "manual_exp_change_rate (productsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.ProductSettings.manual_exp_change_rate"]], "map_final_energy_demand_scenario_to_enum (transportsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.TransportSettings.map_final_energy_demand_scenario_to_enum"]], "map_model_split_method_string_to_enum (transportsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.TransportSettings.map_model_split_method_string_to_enum"]], "map_sc_forecast_method (ctssettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.CtsSettings.map_sc_forecast_method"]], "output_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.output_path"]], "perc_used (productsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.ProductSettings.perc_used"]], "product_data_access (industryinput attribute)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.product_data_access"]], "read_best_available_technology() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_best_available_technology"]], "read_country_groups() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_country_groups"]], "read_employee_per_subsector() (ctsinput class method)": [[2, "endemo2.input_and_settings.input_cts.CtsInput.read_employee_per_subsector"]], "read_energy_carrier_consumption_historical() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_energy_carrier_consumption_historical"]], "read_energy_carrier_consumption_historical() (in module endemo2.input_and_settings.input_utility)": [[2, "endemo2.input_and_settings.input_utility.read_energy_carrier_consumption_historical"]], "read_energy_per_source() (transportinput class method)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.read_energy_per_source"]], "read_heat_levels() (industryinput class method)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.read_heat_levels"]], "read_historical_consumption() (householdsinput method)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.read_historical_consumption"]], "read_load_timeseries() (industryinput class method)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.read_load_timeseries"]], "read_modal_split_sheets() (transportinput class method)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.read_modal_split_sheets"]], "read_number_employees_cts() (ctsinput class method)": [[2, "endemo2.input_and_settings.input_cts.CtsInput.read_number_employees_cts"]], "read_nuts2_installed_capacities() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_nuts2_installed_capacities"]], "read_production_data() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_production_data"]], "read_set_and_control_parameters() (inputmanager class method)": [[2, "endemo2.input_and_settings.input_manager.InputManager.read_set_and_control_parameters"]], "read_specific_consumption_default() (productinput method)": [[2, "endemo2.input_and_settings.input_industry.ProductInput.read_specific_consumption_default"]], "read_specific_km() (transportinput class method)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.read_specific_km"]], "read_subsector_groups() (industryinput class method)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.read_subsector_groups"]], "read_timeline_perc() (transportinput class method)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.read_timeline_perc"]], "sc_historical_data_file_names (industryinput attribute)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.sc_historical_data_file_names"]], "sc_historical_sheet_names (generalinput attribute)": [[2, "endemo2.input_and_settings.input_general.GeneralInput.sc_historical_sheet_names"]], "sector_id_map (generalsettings attribute)": [[2, "endemo2.input_and_settings.control_parameters.GeneralSettings.sector_id_map"]], "set_path_and_read() (filereadinghelper method)": [[2, "endemo2.input_and_settings.input_utility.FileReadingHelper.set_path_and_read"]], "sh_read_space_heating_input() (householdsinput method)": [[2, "endemo2.input_and_settings.input_households.HouseholdsInput.sh_read_space_heating_input"]], "skip_years() (filereadinghelper method)": [[2, "endemo2.input_and_settings.input_utility.FileReadingHelper.skip_years"]], "skip_years_in_df() (in module endemo2.input_and_settings.input_utility)": [[2, "endemo2.input_and_settings.input_utility.skip_years_in_df"]], "subsector_groups_hotmaps_filenames (industryinput attribute)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.subsector_groups_hotmaps_filenames"]], "subsector_groups_str_to_enum_map (industryinput attribute)": [[2, "endemo2.input_and_settings.input_industry.IndustryInput.subsector_groups_str_to_enum_map"]], "subsector_names (ctsinput attribute)": [[2, "endemo2.input_and_settings.input_cts.CtsInput.subsector_names"]], "super_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.super_path"]], "tra_modal_lists (transportinput attribute)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.tra_modal_lists"]], "tra_modal_split_groups (transportinput attribute)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.tra_modal_split_groups"]], "tra_traffic_types (transportinput attribute)": [[2, "endemo2.input_and_settings.input_transport.TransportInput.tra_traffic_types"]], "transport_path (inputmanager attribute)": [[2, "endemo2.input_and_settings.input_manager.InputManager.transport_path"]], "update_set_and_control_parameters() (inputmanager method)": [[2, "endemo2.input_and_settings.input_manager.InputManager.update_set_and_control_parameters"]], "endemo2.model_instance": [[3, "module-endemo2.model_instance"]], "countryinstancefilter (class in endemo2.model_instance.instance_filter.general_instance_filter)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter"]], "ctsinstancefilter (class in endemo2.model_instance.instance_filter.cts_instance_filter)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter"]], "householdsinstancefilter (class in endemo2.model_instance.instance_filter.households_instance_filter)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter"]], "industryinstancefilter (class in endemo2.model_instance.instance_filter.industry_instance_filter)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter"]], "instancefilter (class in endemo2.model_instance.instance_filter.general_instance_filter)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.InstanceFilter"]], "productinstancefilter (class in endemo2.model_instance.instance_filter.industry_instance_filter)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter"]], "transportinstancefilter (class in endemo2.model_instance.instance_filter.transport_instance_filter)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter"]], "endemo2.model_instance.instance_filter": [[4, "module-endemo2.model_instance.instance_filter"]], "endemo2.model_instance.instance_filter.cts_instance_filter": [[4, "module-endemo2.model_instance.instance_filter.cts_instance_filter"]], "endemo2.model_instance.instance_filter.general_instance_filter": [[4, "module-endemo2.model_instance.instance_filter.general_instance_filter"]], "endemo2.model_instance.instance_filter.households_instance_filter": [[4, "module-endemo2.model_instance.instance_filter.households_instance_filter"]], "endemo2.model_instance.instance_filter.industry_instance_filter": [[4, "module-endemo2.model_instance.instance_filter.industry_instance_filter"]], "endemo2.model_instance.instance_filter.transport_instance_filter": [[4, "module-endemo2.model_instance.instance_filter.transport_instance_filter"]], "get_active_product_names() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_active_product_names"]], "get_active_products_for_this_country() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_active_products_for_this_country"]], "get_active_sectors() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_active_sectors"]], "get_amount() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_amount"]], "get_area_per_household_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_area_per_household_in_target_year"]], "get_avg_persons_per_household_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_avg_persons_per_household_in_target_year"]], "get_bat() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_bat"]], "get_country_abbreviations() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_country_abbreviations"]], "get_cts_subsector_names() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_cts_subsector_names"]], "get_employee_share_of_population_country() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_employee_share_of_population_country"]], "get_employee_share_of_population_nuts2() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_employee_share_of_population_nuts2"]], "get_energy_consumption_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_energy_consumption_in_target_year"]], "get_energy_consumption_lighting_and_appliances_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_energy_consumption_lighting_and_appliances_in_target_year"]], "get_energy_consumption_of_modal() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_energy_consumption_of_modal"]], "get_gdp_in_target_year() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_gdp_in_target_year"]], "get_heat_levels() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_heat_levels"]], "get_heat_levels() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_heat_levels"]], "get_heat_levels() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_heat_levels"]], "get_heat_substitution() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_heat_substitution"]], "get_heat_substitution() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_heat_substitution"]], "get_historical_amount() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_historical_amount"]], "get_historical_population_in_certain_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_historical_population_in_certain_year"]], "get_hot_water_calibration_factor() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_hot_water_calibration_factor"]], "get_hot_water_inlet_temperature() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_hot_water_inlet_temperature"]], "get_hot_water_liter_per_capita() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_hot_water_liter_per_capita"]], "get_hot_water_outlet_temperature() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_hot_water_outlet_temperature"]], "get_hot_water_specific_capacity() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_hot_water_specific_capacity"]], "get_hourly_profile() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_hourly_profile"]], "get_load_profile() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_load_profile"]], "get_load_profile_efh() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_load_profile_efh"]], "get_load_profile_mfh() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_load_profile_mfh"]], "get_modal_group_parent() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_modal_group_parent"]], "get_modal_group_percentages_in_target_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_modal_group_percentages_in_target_year"]], "get_modal_share_in_target_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_modal_share_in_target_year"]], "get_modals_for_traffic_type() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_modals_for_traffic_type"]], "get_nuts2_capacities() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_nuts2_capacities"]], "get_nuts2_distribution() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_nuts2_distribution"]], "get_nuts2_distribution_scalars() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_nuts2_distribution_scalars"]], "get_nuts2_region_names() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_nuts2_region_names"]], "get_nuts2_regions() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_nuts2_regions"]], "get_nuts2_regions() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_nuts2_regions"]], "get_nuts2_rest_sector_distribution() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_nuts2_rest_sector_distribution"]], "get_nuts2_spec_demand_scalar() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_nuts2_spec_demand_scalar"]], "get_perc_modal_to_demand_type_in_target_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_perc_modal_to_demand_type_in_target_year"]], "get_perc_used() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_perc_used"]], "get_population_country() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_population_country"]], "get_population_country_in_target_year() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_population_country_in_target_year"]], "get_population_country_in_target_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_population_country_in_target_year"]], "get_population_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_population_in_target_year"]], "get_population_nuts2() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_population_nuts2"]], "get_population_nuts2_in_target_year() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_population_nuts2_in_target_year"]], "get_population_nuts2_in_target_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_population_nuts2_in_target_year"]], "get_population_nuts2_percentages_in_target_year() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_population_nuts2_percentages_in_target_year"]], "get_population_nuts2_sum() (countryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.general_instance_filter.CountryInstanceFilter.get_population_nuts2_sum"]], "get_product_amount_historical_in_year() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_product_amount_historical_in_year"]], "get_product_amount_sum_country_in_target_year() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_product_amount_sum_country_in_target_year"]], "get_product_amount_sum_nuts2_in_target_year() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_product_amount_sum_nuts2_in_target_year"]], "get_rest_sector_basis_year() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_rest_sector_basis_year"]], "get_rest_sector_growth_rate() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_rest_sector_growth_rate"]], "get_rest_sector_heat_levels() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_rest_sector_heat_levels"]], "get_rest_sector_hourly_profile() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_rest_sector_hourly_profile"]], "get_rest_sector_proportion_in_basis_year() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_rest_sector_proportion_in_basis_year"]], "get_single_household_share() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_single_household_share"]], "get_space_heating_calibration_factor() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_space_heating_calibration_factor"]], "get_space_heating_specific_heat_in_target_year() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_space_heating_specific_heat_in_target_year"]], "get_specific_consumption() (ctsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.cts_instance_filter.CtsInstanceFilter.get_specific_consumption"]], "get_specific_consumption() (productinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.ProductInstanceFilter.get_specific_consumption"]], "get_specific_unit_km_in_reference_year() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_specific_unit_km_in_reference_year"]], "get_subsectors() (householdsinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.households_instance_filter.HouseholdsInstanceFilter.get_subsectors"]], "get_target_year() (industryinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.industry_instance_filter.IndustryInstanceFilter.get_target_year"]], "get_unit_km_in_target_year_country() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_unit_km_in_target_year_country"]], "get_unit_km_in_target_year_nuts2() (transportinstancefilter method)": [[4, "endemo2.model_instance.instance_filter.transport_instance_filter.TransportInstanceFilter.get_unit_km_in_target_year_nuts2"]], "country (class in endemo2.model_instance.model.country)": [[5, "endemo2.model_instance.model.country.Country"]], "sector (class in endemo2.model_instance.model.sector)": [[5, "endemo2.model_instance.model.sector.Sector"]], "calculate_demand() (sector method)": [[5, "endemo2.model_instance.model.sector.Sector.calculate_demand"]], "calculate_demand_distributed_by_nuts2() (sector method)": [[5, "endemo2.model_instance.model.sector.Sector.calculate_demand_distributed_by_nuts2"]], "calculate_total_demand() (country method)": [[5, "endemo2.model_instance.model.country.Country.calculate_total_demand"]], "endemo2.model_instance.model": [[5, "module-endemo2.model_instance.model"]], "endemo2.model_instance.model.country": [[5, "module-endemo2.model_instance.model.country"]], "endemo2.model_instance.model.sector": [[5, "module-endemo2.model_instance.model.sector"]], "get_sector() (country method)": [[5, "endemo2.model_instance.model.country.Country.get_sector"]], "commercialtradeservices (class in endemo2.model_instance.model.cts.cts_sector)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices"]], "ctssubsector (class in endemo2.model_instance.model.cts.cts_subsector)": [[6, "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector"]], "calculate_demand() (commercialtradeservices method)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices.calculate_demand"]], "calculate_demand() (ctssubsector method)": [[6, "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector.calculate_demand"]], "calculate_demand_distributed_by_nuts2() (commercialtradeservices method)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices.calculate_demand_distributed_by_nuts2"]], "calculate_demand_distributed_by_nuts2() (ctssubsector method)": [[6, "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector.calculate_demand_distributed_by_nuts2"]], "calculate_hourly_demand() (commercialtradeservices method)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices.calculate_hourly_demand"]], "calculate_hourly_demand() (ctssubsector method)": [[6, "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector.calculate_hourly_demand"]], "calculate_hourly_demand_distributed_by_nuts2() (commercialtradeservices method)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices.calculate_hourly_demand_distributed_by_nuts2"]], "calculate_hourly_demand_distributed_by_nuts2() (ctssubsector method)": [[6, "endemo2.model_instance.model.cts.cts_subsector.CtsSubsector.calculate_hourly_demand_distributed_by_nuts2"]], "endemo2.model_instance.model.cts": [[6, "module-endemo2.model_instance.model.cts"]], "endemo2.model_instance.model.cts.cts_sector": [[6, "module-endemo2.model_instance.model.cts.cts_sector"]], "endemo2.model_instance.model.cts.cts_subsector": [[6, "module-endemo2.model_instance.model.cts.cts_subsector"]], "get_subsectors() (commercialtradeservices method)": [[6, "endemo2.model_instance.model.cts.cts_sector.CommercialTradeServices.get_subsectors"]], "hotwater (class in endemo2.model_instance.model.households.hh_subsectors)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HotWater"]], "households (class in endemo2.model_instance.model.households.household_sector)": [[7, "endemo2.model_instance.model.households.household_sector.Households"]], "householdssubsector (class in endemo2.model_instance.model.households.hh_subsectors)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector"]], "spaceheating (class in endemo2.model_instance.model.households.hh_subsectors)": [[7, "endemo2.model_instance.model.households.hh_subsectors.SpaceHeating"]], "calculate_demand() (hotwater method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HotWater.calculate_demand"]], "calculate_demand() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_demand"]], "calculate_demand() (householdssubsector method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector.calculate_demand"]], "calculate_demand() (spaceheating method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.SpaceHeating.calculate_demand"]], "calculate_demand_distributed_by_nuts2() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_demand_distributed_by_nuts2"]], "calculate_demand_distributed_by_nuts2() (householdssubsector method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector.calculate_demand_distributed_by_nuts2"]], "calculate_hourly_demand_efh() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_hourly_demand_efh"]], "calculate_hourly_demand_efh() (householdssubsector method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector.calculate_hourly_demand_efh"]], "calculate_hourly_demand_efh_distributed_by_nuts2() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_hourly_demand_efh_distributed_by_nuts2"]], "calculate_hourly_demand_mfh() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_hourly_demand_mfh"]], "calculate_hourly_demand_mfh() (householdssubsector method)": [[7, "endemo2.model_instance.model.households.hh_subsectors.HouseholdsSubsector.calculate_hourly_demand_mfh"]], "calculate_hourly_demand_mfh_distributed_by_nuts2() (households method)": [[7, "endemo2.model_instance.model.households.household_sector.Households.calculate_hourly_demand_mfh_distributed_by_nuts2"]], "endemo2.model_instance.model.households": [[7, "module-endemo2.model_instance.model.households"]], "endemo2.model_instance.model.households.hh_subsectors": [[7, "module-endemo2.model_instance.model.households.hh_subsectors"]], "endemo2.model_instance.model.households.household_sector": [[7, "module-endemo2.model_instance.model.households.household_sector"]], "industry (class in endemo2.model_instance.model.industry.industry_sector)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry"]], "product (class in endemo2.model_instance.model.industry.products)": [[8, "endemo2.model_instance.model.industry.products.Product"]], "calculate_demand() (product method)": [[8, "endemo2.model_instance.model.industry.products.Product.calculate_demand"]], "calculate_forecasted_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_forecasted_demand"]], "calculate_forecasted_demand_distributed_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_forecasted_demand_distributed_by_nuts2"]], "calculate_forecasted_hourly_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_forecasted_hourly_demand"]], "calculate_forecasted_hourly_demand_distributed_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_forecasted_hourly_demand_distributed_by_nuts2"]], "calculate_hourly_demand() (product method)": [[8, "endemo2.model_instance.model.industry.products.Product.calculate_hourly_demand"]], "calculate_hourly_demand_distributed_by_nuts2() (product method)": [[8, "endemo2.model_instance.model.industry.products.Product.calculate_hourly_demand_distributed_by_nuts2"]], "calculate_rest_demand_distributed_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_rest_demand_distributed_by_nuts2"]], "calculate_rest_sector_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_rest_sector_demand"]], "calculate_rest_sector_hourly_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_rest_sector_hourly_demand"]], "calculate_rest_sector_hourly_demand_distributed_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_rest_sector_hourly_demand_distributed_by_nuts2"]], "calculate_total_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_total_demand"]], "calculate_total_demand_distributed_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_total_demand_distributed_by_nuts2"]], "calculate_total_hourly_demand() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_total_hourly_demand"]], "calculate_total_hourly_demand_distributes_by_nuts2() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.calculate_total_hourly_demand_distributes_by_nuts2"]], "endemo2.model_instance.model.industry": [[8, "module-endemo2.model_instance.model.industry"]], "endemo2.model_instance.model.industry.industry_sector": [[8, "module-endemo2.model_instance.model.industry.industry_sector"]], "endemo2.model_instance.model.industry.products": [[8, "module-endemo2.model_instance.model.industry.products"]], "get_demand_distributed_by_nuts2() (product method)": [[8, "endemo2.model_instance.model.industry.products.Product.get_demand_distributed_by_nuts2"]], "get_product() (industry method)": [[8, "endemo2.model_instance.model.industry.industry_sector.Industry.get_product"]], "transport (class in endemo2.model_instance.model.transport.transport_sector)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport"]], "calculate_demand() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_demand"]], "calculate_demand_distributed_by_nuts2() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_demand_distributed_by_nuts2"]], "calculate_demand_for_traffic_type() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_demand_for_traffic_type"]], "calculate_demand_for_traffic_type_distributed_by_nuts2() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_demand_for_traffic_type_distributed_by_nuts2"]], "calculate_subsector_demand() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_subsector_demand"]], "calculate_subsector_demand_distributed_by_nuts2() (transport method)": [[9, "endemo2.model_instance.model.transport.transport_sector.Transport.calculate_subsector_demand_distributed_by_nuts2"]], "endemo2.model_instance.model.transport": [[9, "module-endemo2.model_instance.model.transport"]], "endemo2.model_instance.model.transport.transport_sector": [[9, "module-endemo2.model_instance.model.transport.transport_sector"]], "filegenerator (class in endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.FileGenerator"]], "add_complete_column() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.add_complete_column"]], "add_entry() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.add_entry"]], "end_sheet() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.end_sheet"]], "endemo2.output": [[10, "module-endemo2.output"]], "endemo2.output.output_instance": [[10, "module-endemo2.output.output_instance"]], "endemo2.output.output_preprocessing": [[10, "module-endemo2.output.output_preprocessing"]], "endemo2.output.output_utility": [[10, "module-endemo2.output.output_utility"]], "endemo2.output.output_utility_visual": [[10, "module-endemo2.output.output_utility_visual"]], "ensure_directory_exists() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.ensure_directory_exists"]], "generate_instance_output() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.generate_instance_output"]], "generate_preprocessing_output() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.generate_preprocessing_output"]], "generate_timeseries_output() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.generate_timeseries_output"]], "get_day_directory() (filegenerator class method)": [[10, "endemo2.output.output_utility.FileGenerator.get_day_directory"]], "get_day_folder_path() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.get_day_folder_path"]], "output_cts_coef_employee_number() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_cts_coef_employee_number"]], "output_cts_demand_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_demand_country"]], "output_cts_demand_hourly_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_demand_hourly_country"]], "output_cts_demand_hourly_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_demand_hourly_nuts2"]], "output_cts_demand_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_demand_nuts2"]], "output_cts_employee_number() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_employee_number"]], "output_cts_employee_number_visual_country() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_cts_employee_number_visual_country"]], "output_cts_employee_number_visual_nuts2() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_cts_employee_number_visual_nuts2"]], "output_cts_specific_consumption() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_cts_specific_consumption"]], "output_cts_specific_consumption() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_cts_specific_consumption"]], "output_cts_specific_consumption_visual() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_cts_specific_consumption_visual"]], "output_gen_gdp() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_gen_gdp"]], "output_gen_population_forecast() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_gen_population_forecast"]], "output_gen_population_forecast_details() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_gen_population_forecast_details"]], "output_hh_characteristics() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_characteristics"]], "output_hh_coef_historical_consumption() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_hh_coef_historical_consumption"]], "output_hh_consumption_visual_country() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_hh_consumption_visual_country"]], "output_hh_demand_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_demand_country"]], "output_hh_demand_historical_2018() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_hh_demand_historical_2018"]], "output_hh_demand_hourly_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_demand_hourly_country"]], "output_hh_demand_hourly_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_demand_hourly_nuts2"]], "output_hh_demand_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_demand_nuts2"]], "output_hh_subsectors_demand() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_hh_subsectors_demand"]], "output_ind_coef_product_amount() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_coef_product_amount"]], "output_ind_country_group() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_country_group"]], "output_ind_country_group_visual() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_country_group_visual"]], "output_ind_demand_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_demand_country"]], "output_ind_demand_hourly_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_demand_hourly_country"]], "output_ind_demand_hourly_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_demand_hourly_nuts2"]], "output_ind_demand_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_demand_nuts2"]], "output_ind_product_amount() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_product_amount"]], "output_ind_product_amount_visual() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_product_amount_visual"]], "output_ind_specific_consumption() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_ind_specific_consumption"]], "output_ind_specific_consumption() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_specific_consumption"]], "output_ind_specific_consumption_visual() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_ind_specific_consumption_visual"]], "output_tra_coef_modal_split() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_tra_coef_modal_split"]], "output_tra_demand_hourly_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_demand_hourly_country"]], "output_tra_demand_hourly_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_demand_hourly_nuts2"]], "output_tra_energy_demand_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_energy_demand_country"]], "output_tra_energy_demand_detail() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_energy_demand_detail"]], "output_tra_energy_demand_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_energy_demand_nuts2"]], "output_tra_kilometers() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_kilometers"]], "output_tra_kilometers_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_kilometers_nuts2"]], "output_tra_modal_split() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_modal_split"]], "output_tra_modal_split_visual() (in module endemo2.output.output_preprocessing)": [[10, "endemo2.output.output_preprocessing.output_tra_modal_split_visual"]], "output_tra_pkm_tkm_hourly_country() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_pkm_tkm_hourly_country"]], "output_tra_pkm_tkm_hourly_nuts2() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_pkm_tkm_hourly_nuts2"]], "output_tra_production_volume() (in module endemo2.output.output_instance)": [[10, "endemo2.output.output_instance.output_tra_production_volume"]], "plot_coef_in_range() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.plot_coef_in_range"]], "plot_coef_with_method_in_range() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.plot_coef_with_method_in_range"]], "plot_historical_data() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.plot_historical_data"]], "plot_series_detailed() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.plot_series_detailed"]], "plot_series_simple() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.plot_series_simple"]], "print_all_entries() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.print_all_entries"]], "print_length_of_all_entries() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.print_length_of_all_entries"]], "save_file() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.save_file"]], "save_multiple_series_plot() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.save_multiple_series_plot"]], "save_plot() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.save_plot"]], "save_series_plot() (in module endemo2.output.output_utility_visual)": [[10, "endemo2.output.output_utility_visual.save_series_plot"]], "shortcut_coef_output() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.shortcut_coef_output"]], "shortcut_demand_table() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.shortcut_demand_table"]], "shortcut_save_timeseries_print() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.shortcut_save_timeseries_print"]], "shortcut_sc_output() (in module endemo2.output.output_utility)": [[10, "endemo2.output.output_utility.shortcut_sc_output"]], "start_sheet() (filegenerator method)": [[10, "endemo2.output.output_utility.FileGenerator.start_sheet"]], "countrygroup (class in endemo2.preprocessing.preproccessing_step_two)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroup"]], "countrygroupjoined (class in endemo2.preprocessing.preproccessing_step_two)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoined"]], "countrygroupjoineddiversified (class in endemo2.preprocessing.preproccessing_step_two)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoinedDiversified"]], "countrypreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.CountryPreprocessed"]], "ctspreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.CtsPreprocessed"]], "gdppreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.GDPPreprocessed"]], "groupmanager (class in endemo2.preprocessing.preproccessing_step_two)": [[11, "endemo2.preprocessing.preproccessing_step_two.GroupManager"]], "householdspreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.HouseholdsPreprocessed"]], "industrypreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.IndustryPreprocessed"]], "nuts2preprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.NUTS2Preprocessed"]], "populationpreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.PopulationPreprocessed"]], "preprocessor (class in endemo2.preprocessing.preprocessor)": [[11, "endemo2.preprocessing.preprocessor.Preprocessor"]], "productpreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.ProductPreprocessed"]], "specificconsumptionpreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.SpecificConsumptionPreprocessed"]], "transportpreprocessed (class in endemo2.preprocessing.preprocessing_step_one)": [[11, "endemo2.preprocessing.preprocessing_step_one.TransportPreprocessed"]], "endemo2.preprocessing": [[11, "module-endemo2.preprocessing"]], "endemo2.preprocessing.preproccessing_step_two": [[11, "module-endemo2.preprocessing.preproccessing_step_two"]], "endemo2.preprocessing.preprocessing_step_one": [[11, "module-endemo2.preprocessing.preprocessing_step_one"]], "endemo2.preprocessing.preprocessing_utility": [[11, "module-endemo2.preprocessing.preprocessing_utility"]], "endemo2.preprocessing.preprocessor": [[11, "module-endemo2.preprocessing.preprocessor"]], "energy_carrier_to_energy_consumption() (in module endemo2.preprocessing.preprocessing_utility)": [[11, "endemo2.preprocessing.preprocessing_utility.energy_carrier_to_energy_consumption"]], "get_all_historical_data() (countrygroupjoined method)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoined.get_all_historical_data"]], "get_all_historical_data() (countrygroupjoineddiversified method)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoinedDiversified.get_all_historical_data"]], "get_coef() (countrygroupjoined method)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoined.get_coef"]], "get_coef_for_country() (countrygroupjoineddiversified method)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroupJoinedDiversified.get_coef_for_country"]], "get_coef_for_country_and_product() (groupmanager method)": [[11, "endemo2.preprocessing.preproccessing_step_two.GroupManager.get_coef_for_country_and_product"]], "get_countries_in_group() (countrygroup method)": [[11, "endemo2.preprocessing.preproccessing_step_two.CountryGroup.get_countries_in_group"]], "is_in_separate_group() (groupmanager method)": [[11, "endemo2.preprocessing.preproccessing_step_two.GroupManager.is_in_separate_group"]], "preprocess_specific_consumption() (ctspreprocessed class method)": [[11, "endemo2.preprocessing.preprocessing_step_one.CtsPreprocessed.preprocess_specific_consumption"]]}})